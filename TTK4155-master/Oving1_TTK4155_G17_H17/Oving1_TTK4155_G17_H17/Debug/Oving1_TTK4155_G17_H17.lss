
Oving1_TTK4155_G17_H17.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  00000cb0  00000d44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cb0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800208  00800208  00000e4c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e4c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000ea8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000476  00000000  00000000  00000f08  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002c0  00000000  00000000  0000137e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000214  00000000  00000000  0000163e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000104  00000000  00000000  00001854  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002a9  00000000  00000000  00001958  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000228  00000000  00000000  00001c01  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00001e29  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	12 e0       	ldi	r17, 0x02	; 2
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e0 eb       	ldi	r30, 0xB0	; 176
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a8 30       	cpi	r26, 0x08	; 8
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	a8 e0       	ldi	r26, 0x08	; 8
  96:	b2 e0       	ldi	r27, 0x02	; 2
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a2 31       	cpi	r26, 0x12	; 18
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 df 00 	call	0x1be	; 0x1be <main>
  a6:	0c 94 56 06 	jmp	0xcac	; 0xcac <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <SRAM_test>:
	}
}

#include <stdlib.h>
void SRAM_test(void)
{
  ae:	cf 92       	push	r12
  b0:	df 92       	push	r13
  b2:	ef 92       	push	r14
  b4:	ff 92       	push	r15
  b6:	0f 93       	push	r16
  b8:	1f 93       	push	r17
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
	BIT_ON(MCUCR,SRE);
  be:	85 b7       	in	r24, 0x35	; 53
  c0:	80 68       	ori	r24, 0x80	; 128
  c2:	85 bf       	out	0x35, r24	; 53
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
  c4:	8a e0       	ldi	r24, 0x0A	; 10
  c6:	91 e0       	ldi	r25, 0x01	; 1
  c8:	0e 94 cd 01 	call	0x39a	; 0x39a <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
  cc:	0e 94 5e 01 	call	0x2bc	; 0x2bc <rand>
  d0:	6c 01       	movw	r12, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
  d2:	0e 94 63 01 	call	0x2c6	; 0x2c6 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
  d6:	c0 e0       	ldi	r28, 0x00	; 0
  d8:	d0 e0       	ldi	r29, 0x00	; 0
{
	BIT_ON(MCUCR,SRE);
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
  da:	00 e0       	ldi	r16, 0x00	; 0
  dc:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,	retreived_value, some_value);
  de:	0f 2e       	mov	r0, r31
  e0:	f0 e2       	ldi	r31, 0x20	; 32
  e2:	ef 2e       	mov	r14, r31
  e4:	f1 e0       	ldi	r31, 0x01	; 1
  e6:	ff 2e       	mov	r15, r31
  e8:	f0 2d       	mov	r31, r0
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
  ea:	0e 94 5e 01 	call	0x2bc	; 0x2bc <rand>
  ee:	fe 01       	movw	r30, r28
  f0:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
  f2:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
  f4:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
  f6:	28 17       	cp	r18, r24
  f8:	a9 f0       	breq	.+42     	; 0x124 <SRAM_test+0x76>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,	retreived_value, some_value);
  fa:	99 27       	eor	r25, r25
  fc:	9f 93       	push	r25
  fe:	8f 93       	push	r24
 100:	1f 92       	push	r1
 102:	2f 93       	push	r18
 104:	df 93       	push	r29
 106:	cf 93       	push	r28
 108:	ff 92       	push	r15
 10a:	ef 92       	push	r14
 10c:	0e 94 b9 01 	call	0x372	; 0x372 <printf>
			write_errors++;
 110:	0f 5f       	subi	r16, 0xFF	; 255
 112:	1f 4f       	sbci	r17, 0xFF	; 255
 114:	8d b7       	in	r24, 0x3d	; 61
 116:	9e b7       	in	r25, 0x3e	; 62
 118:	08 96       	adiw	r24, 0x08	; 8
 11a:	0f b6       	in	r0, 0x3f	; 63
 11c:	f8 94       	cli
 11e:	9e bf       	out	0x3e, r25	; 62
 120:	0f be       	out	0x3f, r0	; 63
 122:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 124:	21 96       	adiw	r28, 0x01	; 1
 126:	c1 15       	cp	r28, r1
 128:	98 e0       	ldi	r25, 0x08	; 8
 12a:	d9 07       	cpc	r29, r25
 12c:	f1 f6       	brne	.-68     	; 0xea <SRAM_test+0x3c>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,	retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
 12e:	c6 01       	movw	r24, r12
 130:	0e 94 63 01 	call	0x2c6	; 0x2c6 <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 134:	c0 e0       	ldi	r28, 0x00	; 0
 136:	d0 e0       	ldi	r29, 0x00	; 0
	BIT_ON(MCUCR,SRE);
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 138:	e1 2c       	mov	r14, r1
 13a:	f1 2c       	mov	r15, r1
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
 13c:	0f 2e       	mov	r0, r31
 13e:	f9 e5       	ldi	r31, 0x59	; 89
 140:	cf 2e       	mov	r12, r31
 142:	f1 e0       	ldi	r31, 0x01	; 1
 144:	df 2e       	mov	r13, r31
 146:	f0 2d       	mov	r31, r0
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 148:	0e 94 5e 01 	call	0x2bc	; 0x2bc <rand>
 14c:	fe 01       	movw	r30, r28
 14e:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
 150:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
 152:	28 17       	cp	r18, r24
 154:	b1 f0       	breq	.+44     	; 0x182 <SRAM_test+0xd4>
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
 156:	99 27       	eor	r25, r25
 158:	9f 93       	push	r25
 15a:	8f 93       	push	r24
 15c:	1f 92       	push	r1
 15e:	2f 93       	push	r18
 160:	df 93       	push	r29
 162:	cf 93       	push	r28
 164:	df 92       	push	r13
 166:	cf 92       	push	r12
 168:	0e 94 b9 01 	call	0x372	; 0x372 <printf>
			retrieval_errors++;
 16c:	8f ef       	ldi	r24, 0xFF	; 255
 16e:	e8 1a       	sub	r14, r24
 170:	f8 0a       	sbc	r15, r24
 172:	8d b7       	in	r24, 0x3d	; 61
 174:	9e b7       	in	r25, 0x3e	; 62
 176:	08 96       	adiw	r24, 0x08	; 8
 178:	0f b6       	in	r0, 0x3f	; 63
 17a:	f8 94       	cli
 17c:	9e bf       	out	0x3e, r25	; 62
 17e:	0f be       	out	0x3f, r0	; 63
 180:	8d bf       	out	0x3d, r24	; 61
		}
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 182:	21 96       	adiw	r28, 0x01	; 1
 184:	c1 15       	cp	r28, r1
 186:	98 e0       	ldi	r25, 0x08	; 8
 188:	d9 07       	cpc	r29, r25
 18a:	f1 f6       	brne	.-68     	; 0x148 <SRAM_test+0x9a>
		if (retreived_value != some_value) {
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with\n%4d errors in write phase and\n%4d errors	in retrieval phase\n\n", write_errors, retrieval_errors);
 18c:	ff 92       	push	r15
 18e:	ef 92       	push	r14
 190:	1f 93       	push	r17
 192:	0f 93       	push	r16
 194:	86 e9       	ldi	r24, 0x96	; 150
 196:	91 e0       	ldi	r25, 0x01	; 1
 198:	9f 93       	push	r25
 19a:	8f 93       	push	r24
 19c:	0e 94 b9 01 	call	0x372	; 0x372 <printf>
 1a0:	0f 90       	pop	r0
 1a2:	0f 90       	pop	r0
 1a4:	0f 90       	pop	r0
 1a6:	0f 90       	pop	r0
 1a8:	0f 90       	pop	r0
 1aa:	0f 90       	pop	r0
 1ac:	df 91       	pop	r29
 1ae:	cf 91       	pop	r28
 1b0:	1f 91       	pop	r17
 1b2:	0f 91       	pop	r16
 1b4:	ff 90       	pop	r15
 1b6:	ef 90       	pop	r14
 1b8:	df 90       	pop	r13
 1ba:	cf 90       	pop	r12
 1bc:	08 95       	ret

000001be <main>:

void SRAM_test(void);

int main(void)
{
	init_UART(UBBR);
 1be:	8f e1       	ldi	r24, 0x1F	; 31
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	0e 94 f5 00 	call	0x1ea	; 0x1ea <init_UART>
	
	SRAM_test();
 1c6:	0e 94 57 00 	call	0xae	; 0xae <SRAM_test>
	
	testUart();
 1ca:	0e 94 00 01 	call	0x200	; 0x200 <testUart>
	while (1)
	{
		printf("placeholder\n");
 1ce:	8d ee       	ldi	r24, 0xED	; 237
 1d0:	91 e0       	ldi	r25, 0x01	; 1
 1d2:	0e 94 cd 01 	call	0x39a	; 0x39a <puts>
 1d6:	fb cf       	rjmp	.-10     	; 0x1ce <main+0x10>

000001d8 <send_UART>:
 1d8:	5d 9b       	sbis	0x0b, 5	; 11
 1da:	fe cf       	rjmp	.-4      	; 0x1d8 <send_UART>
 1dc:	8c b9       	out	0x0c, r24	; 12
 1de:	08 95       	ret

000001e0 <recieve_UART>:
 1e0:	5f 9b       	sbis	0x0b, 7	; 11
 1e2:	fe cf       	rjmp	.-4      	; 0x1e0 <recieve_UART>
 1e4:	8c b1       	in	r24, 0x0c	; 12
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	08 95       	ret

000001ea <init_UART>:
 1ea:	90 bd       	out	0x20, r25	; 32
 1ec:	89 b9       	out	0x09, r24	; 9
 1ee:	88 e1       	ldi	r24, 0x18	; 24
 1f0:	8a b9       	out	0x0a, r24	; 10
 1f2:	60 ef       	ldi	r22, 0xF0	; 240
 1f4:	70 e0       	ldi	r23, 0x00	; 0
 1f6:	8c ee       	ldi	r24, 0xEC	; 236
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	0e 94 6e 01 	call	0x2dc	; 0x2dc <fdevopen>
 1fe:	08 95       	ret

00000200 <testUart>:
 200:	cf 93       	push	r28
 202:	89 ef       	ldi	r24, 0xF9	; 249
 204:	91 e0       	ldi	r25, 0x01	; 1
 206:	0e 94 cd 01 	call	0x39a	; 0x39a <puts>
 20a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <recieve_UART>
 20e:	c8 2f       	mov	r28, r24
 210:	88 23       	and	r24, r24
 212:	d9 f3       	breq	.-10     	; 0x20a <testUart+0xa>
 214:	0e 94 ec 00 	call	0x1d8	; 0x1d8 <send_UART>
 218:	c9 35       	cpi	r28, 0x59	; 89
 21a:	b9 f7       	brne	.-18     	; 0x20a <testUart+0xa>
 21c:	cf 91       	pop	r28
 21e:	08 95       	ret

00000220 <do_rand>:
 220:	8f 92       	push	r8
 222:	9f 92       	push	r9
 224:	af 92       	push	r10
 226:	bf 92       	push	r11
 228:	cf 92       	push	r12
 22a:	df 92       	push	r13
 22c:	ef 92       	push	r14
 22e:	ff 92       	push	r15
 230:	cf 93       	push	r28
 232:	df 93       	push	r29
 234:	ec 01       	movw	r28, r24
 236:	68 81       	ld	r22, Y
 238:	79 81       	ldd	r23, Y+1	; 0x01
 23a:	8a 81       	ldd	r24, Y+2	; 0x02
 23c:	9b 81       	ldd	r25, Y+3	; 0x03
 23e:	61 15       	cp	r22, r1
 240:	71 05       	cpc	r23, r1
 242:	81 05       	cpc	r24, r1
 244:	91 05       	cpc	r25, r1
 246:	21 f4       	brne	.+8      	; 0x250 <do_rand+0x30>
 248:	64 e2       	ldi	r22, 0x24	; 36
 24a:	79 ed       	ldi	r23, 0xD9	; 217
 24c:	8b e5       	ldi	r24, 0x5B	; 91
 24e:	97 e0       	ldi	r25, 0x07	; 7
 250:	2d e1       	ldi	r18, 0x1D	; 29
 252:	33 ef       	ldi	r19, 0xF3	; 243
 254:	41 e0       	ldi	r20, 0x01	; 1
 256:	50 e0       	ldi	r21, 0x00	; 0
 258:	0e 94 bc 05 	call	0xb78	; 0xb78 <__divmodsi4>
 25c:	49 01       	movw	r8, r18
 25e:	5a 01       	movw	r10, r20
 260:	9b 01       	movw	r18, r22
 262:	ac 01       	movw	r20, r24
 264:	a7 ea       	ldi	r26, 0xA7	; 167
 266:	b1 e4       	ldi	r27, 0x41	; 65
 268:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__muluhisi3>
 26c:	6b 01       	movw	r12, r22
 26e:	7c 01       	movw	r14, r24
 270:	ac ee       	ldi	r26, 0xEC	; 236
 272:	b4 ef       	ldi	r27, 0xF4	; 244
 274:	a5 01       	movw	r20, r10
 276:	94 01       	movw	r18, r8
 278:	0e 94 e9 05 	call	0xbd2	; 0xbd2 <__mulohisi3>
 27c:	c6 0e       	add	r12, r22
 27e:	d7 1e       	adc	r13, r23
 280:	e8 1e       	adc	r14, r24
 282:	f9 1e       	adc	r15, r25
 284:	f7 fe       	sbrs	r15, 7
 286:	06 c0       	rjmp	.+12     	; 0x294 <do_rand+0x74>
 288:	81 e0       	ldi	r24, 0x01	; 1
 28a:	c8 1a       	sub	r12, r24
 28c:	d1 08       	sbc	r13, r1
 28e:	e1 08       	sbc	r14, r1
 290:	80 e8       	ldi	r24, 0x80	; 128
 292:	f8 0a       	sbc	r15, r24
 294:	c8 82       	st	Y, r12
 296:	d9 82       	std	Y+1, r13	; 0x01
 298:	ea 82       	std	Y+2, r14	; 0x02
 29a:	fb 82       	std	Y+3, r15	; 0x03
 29c:	c6 01       	movw	r24, r12
 29e:	9f 77       	andi	r25, 0x7F	; 127
 2a0:	df 91       	pop	r29
 2a2:	cf 91       	pop	r28
 2a4:	ff 90       	pop	r15
 2a6:	ef 90       	pop	r14
 2a8:	df 90       	pop	r13
 2aa:	cf 90       	pop	r12
 2ac:	bf 90       	pop	r11
 2ae:	af 90       	pop	r10
 2b0:	9f 90       	pop	r9
 2b2:	8f 90       	pop	r8
 2b4:	08 95       	ret

000002b6 <rand_r>:
 2b6:	0e 94 10 01 	call	0x220	; 0x220 <do_rand>
 2ba:	08 95       	ret

000002bc <rand>:
 2bc:	80 e0       	ldi	r24, 0x00	; 0
 2be:	91 e0       	ldi	r25, 0x01	; 1
 2c0:	0e 94 10 01 	call	0x220	; 0x220 <do_rand>
 2c4:	08 95       	ret

000002c6 <srand>:
 2c6:	a0 e0       	ldi	r26, 0x00	; 0
 2c8:	b0 e0       	ldi	r27, 0x00	; 0
 2ca:	80 93 00 01 	sts	0x0100, r24
 2ce:	90 93 01 01 	sts	0x0101, r25
 2d2:	a0 93 02 01 	sts	0x0102, r26
 2d6:	b0 93 03 01 	sts	0x0103, r27
 2da:	08 95       	ret

000002dc <fdevopen>:
 2dc:	0f 93       	push	r16
 2de:	1f 93       	push	r17
 2e0:	cf 93       	push	r28
 2e2:	df 93       	push	r29
 2e4:	ec 01       	movw	r28, r24
 2e6:	8b 01       	movw	r16, r22
 2e8:	00 97       	sbiw	r24, 0x00	; 0
 2ea:	31 f4       	brne	.+12     	; 0x2f8 <fdevopen+0x1c>
 2ec:	61 15       	cp	r22, r1
 2ee:	71 05       	cpc	r23, r1
 2f0:	19 f4       	brne	.+6      	; 0x2f8 <fdevopen+0x1c>
 2f2:	80 e0       	ldi	r24, 0x00	; 0
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	38 c0       	rjmp	.+112    	; 0x368 <fdevopen+0x8c>
 2f8:	6e e0       	ldi	r22, 0x0E	; 14
 2fa:	70 e0       	ldi	r23, 0x00	; 0
 2fc:	81 e0       	ldi	r24, 0x01	; 1
 2fe:	90 e0       	ldi	r25, 0x00	; 0
 300:	0e 94 cc 03 	call	0x798	; 0x798 <calloc>
 304:	fc 01       	movw	r30, r24
 306:	00 97       	sbiw	r24, 0x00	; 0
 308:	a1 f3       	breq	.-24     	; 0x2f2 <fdevopen+0x16>
 30a:	80 e8       	ldi	r24, 0x80	; 128
 30c:	83 83       	std	Z+3, r24	; 0x03
 30e:	01 15       	cp	r16, r1
 310:	11 05       	cpc	r17, r1
 312:	71 f0       	breq	.+28     	; 0x330 <fdevopen+0x54>
 314:	13 87       	std	Z+11, r17	; 0x0b
 316:	02 87       	std	Z+10, r16	; 0x0a
 318:	81 e8       	ldi	r24, 0x81	; 129
 31a:	83 83       	std	Z+3, r24	; 0x03
 31c:	80 91 08 02 	lds	r24, 0x0208
 320:	90 91 09 02 	lds	r25, 0x0209
 324:	89 2b       	or	r24, r25
 326:	21 f4       	brne	.+8      	; 0x330 <fdevopen+0x54>
 328:	f0 93 09 02 	sts	0x0209, r31
 32c:	e0 93 08 02 	sts	0x0208, r30
 330:	20 97       	sbiw	r28, 0x00	; 0
 332:	c9 f0       	breq	.+50     	; 0x366 <fdevopen+0x8a>
 334:	d1 87       	std	Z+9, r29	; 0x09
 336:	c0 87       	std	Z+8, r28	; 0x08
 338:	83 81       	ldd	r24, Z+3	; 0x03
 33a:	82 60       	ori	r24, 0x02	; 2
 33c:	83 83       	std	Z+3, r24	; 0x03
 33e:	80 91 0a 02 	lds	r24, 0x020A
 342:	90 91 0b 02 	lds	r25, 0x020B
 346:	89 2b       	or	r24, r25
 348:	71 f4       	brne	.+28     	; 0x366 <fdevopen+0x8a>
 34a:	f0 93 0b 02 	sts	0x020B, r31
 34e:	e0 93 0a 02 	sts	0x020A, r30
 352:	80 91 0c 02 	lds	r24, 0x020C
 356:	90 91 0d 02 	lds	r25, 0x020D
 35a:	89 2b       	or	r24, r25
 35c:	21 f4       	brne	.+8      	; 0x366 <fdevopen+0x8a>
 35e:	f0 93 0d 02 	sts	0x020D, r31
 362:	e0 93 0c 02 	sts	0x020C, r30
 366:	cf 01       	movw	r24, r30
 368:	df 91       	pop	r29
 36a:	cf 91       	pop	r28
 36c:	1f 91       	pop	r17
 36e:	0f 91       	pop	r16
 370:	08 95       	ret

00000372 <printf>:
 372:	a0 e0       	ldi	r26, 0x00	; 0
 374:	b0 e0       	ldi	r27, 0x00	; 0
 376:	ef eb       	ldi	r30, 0xBF	; 191
 378:	f1 e0       	ldi	r31, 0x01	; 1
 37a:	0c 94 fe 05 	jmp	0xbfc	; 0xbfc <__prologue_saves__+0x20>
 37e:	fe 01       	movw	r30, r28
 380:	35 96       	adiw	r30, 0x05	; 5
 382:	61 91       	ld	r22, Z+
 384:	71 91       	ld	r23, Z+
 386:	af 01       	movw	r20, r30
 388:	80 91 0a 02 	lds	r24, 0x020A
 38c:	90 91 0b 02 	lds	r25, 0x020B
 390:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <vfprintf>
 394:	e2 e0       	ldi	r30, 0x02	; 2
 396:	0c 94 1a 06 	jmp	0xc34	; 0xc34 <__epilogue_restores__+0x20>

0000039a <puts>:
 39a:	0f 93       	push	r16
 39c:	1f 93       	push	r17
 39e:	cf 93       	push	r28
 3a0:	df 93       	push	r29
 3a2:	e0 91 0a 02 	lds	r30, 0x020A
 3a6:	f0 91 0b 02 	lds	r31, 0x020B
 3aa:	23 81       	ldd	r18, Z+3	; 0x03
 3ac:	21 ff       	sbrs	r18, 1
 3ae:	1b c0       	rjmp	.+54     	; 0x3e6 <puts+0x4c>
 3b0:	ec 01       	movw	r28, r24
 3b2:	00 e0       	ldi	r16, 0x00	; 0
 3b4:	10 e0       	ldi	r17, 0x00	; 0
 3b6:	89 91       	ld	r24, Y+
 3b8:	60 91 0a 02 	lds	r22, 0x020A
 3bc:	70 91 0b 02 	lds	r23, 0x020B
 3c0:	db 01       	movw	r26, r22
 3c2:	18 96       	adiw	r26, 0x08	; 8
 3c4:	ed 91       	ld	r30, X+
 3c6:	fc 91       	ld	r31, X
 3c8:	19 97       	sbiw	r26, 0x09	; 9
 3ca:	88 23       	and	r24, r24
 3cc:	31 f0       	breq	.+12     	; 0x3da <puts+0x40>
 3ce:	09 95       	icall
 3d0:	89 2b       	or	r24, r25
 3d2:	89 f3       	breq	.-30     	; 0x3b6 <puts+0x1c>
 3d4:	0f ef       	ldi	r16, 0xFF	; 255
 3d6:	1f ef       	ldi	r17, 0xFF	; 255
 3d8:	ee cf       	rjmp	.-36     	; 0x3b6 <puts+0x1c>
 3da:	8a e0       	ldi	r24, 0x0A	; 10
 3dc:	09 95       	icall
 3de:	89 2b       	or	r24, r25
 3e0:	11 f4       	brne	.+4      	; 0x3e6 <puts+0x4c>
 3e2:	c8 01       	movw	r24, r16
 3e4:	02 c0       	rjmp	.+4      	; 0x3ea <puts+0x50>
 3e6:	8f ef       	ldi	r24, 0xFF	; 255
 3e8:	9f ef       	ldi	r25, 0xFF	; 255
 3ea:	df 91       	pop	r29
 3ec:	cf 91       	pop	r28
 3ee:	1f 91       	pop	r17
 3f0:	0f 91       	pop	r16
 3f2:	08 95       	ret

000003f4 <vfprintf>:
 3f4:	ac e0       	ldi	r26, 0x0C	; 12
 3f6:	b0 e0       	ldi	r27, 0x00	; 0
 3f8:	e0 e0       	ldi	r30, 0x00	; 0
 3fa:	f2 e0       	ldi	r31, 0x02	; 2
 3fc:	0c 94 ee 05 	jmp	0xbdc	; 0xbdc <__prologue_saves__>
 400:	7c 01       	movw	r14, r24
 402:	6b 01       	movw	r12, r22
 404:	8a 01       	movw	r16, r20
 406:	fc 01       	movw	r30, r24
 408:	17 82       	std	Z+7, r1	; 0x07
 40a:	16 82       	std	Z+6, r1	; 0x06
 40c:	83 81       	ldd	r24, Z+3	; 0x03
 40e:	81 ff       	sbrs	r24, 1
 410:	bd c1       	rjmp	.+890    	; 0x78c <__stack+0x28d>
 412:	ce 01       	movw	r24, r28
 414:	01 96       	adiw	r24, 0x01	; 1
 416:	4c 01       	movw	r8, r24
 418:	f7 01       	movw	r30, r14
 41a:	93 81       	ldd	r25, Z+3	; 0x03
 41c:	f6 01       	movw	r30, r12
 41e:	93 fd       	sbrc	r25, 3
 420:	85 91       	lpm	r24, Z+
 422:	93 ff       	sbrs	r25, 3
 424:	81 91       	ld	r24, Z+
 426:	6f 01       	movw	r12, r30
 428:	88 23       	and	r24, r24
 42a:	09 f4       	brne	.+2      	; 0x42e <vfprintf+0x3a>
 42c:	ab c1       	rjmp	.+854    	; 0x784 <__stack+0x285>
 42e:	85 32       	cpi	r24, 0x25	; 37
 430:	39 f4       	brne	.+14     	; 0x440 <vfprintf+0x4c>
 432:	93 fd       	sbrc	r25, 3
 434:	85 91       	lpm	r24, Z+
 436:	93 ff       	sbrs	r25, 3
 438:	81 91       	ld	r24, Z+
 43a:	6f 01       	movw	r12, r30
 43c:	85 32       	cpi	r24, 0x25	; 37
 43e:	29 f4       	brne	.+10     	; 0x44a <vfprintf+0x56>
 440:	b7 01       	movw	r22, r14
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 448:	e7 cf       	rjmp	.-50     	; 0x418 <vfprintf+0x24>
 44a:	51 2c       	mov	r5, r1
 44c:	31 2c       	mov	r3, r1
 44e:	20 e0       	ldi	r18, 0x00	; 0
 450:	20 32       	cpi	r18, 0x20	; 32
 452:	a0 f4       	brcc	.+40     	; 0x47c <vfprintf+0x88>
 454:	8b 32       	cpi	r24, 0x2B	; 43
 456:	69 f0       	breq	.+26     	; 0x472 <vfprintf+0x7e>
 458:	30 f4       	brcc	.+12     	; 0x466 <vfprintf+0x72>
 45a:	80 32       	cpi	r24, 0x20	; 32
 45c:	59 f0       	breq	.+22     	; 0x474 <vfprintf+0x80>
 45e:	83 32       	cpi	r24, 0x23	; 35
 460:	69 f4       	brne	.+26     	; 0x47c <vfprintf+0x88>
 462:	20 61       	ori	r18, 0x10	; 16
 464:	2c c0       	rjmp	.+88     	; 0x4be <vfprintf+0xca>
 466:	8d 32       	cpi	r24, 0x2D	; 45
 468:	39 f0       	breq	.+14     	; 0x478 <vfprintf+0x84>
 46a:	80 33       	cpi	r24, 0x30	; 48
 46c:	39 f4       	brne	.+14     	; 0x47c <vfprintf+0x88>
 46e:	21 60       	ori	r18, 0x01	; 1
 470:	26 c0       	rjmp	.+76     	; 0x4be <vfprintf+0xca>
 472:	22 60       	ori	r18, 0x02	; 2
 474:	24 60       	ori	r18, 0x04	; 4
 476:	23 c0       	rjmp	.+70     	; 0x4be <vfprintf+0xca>
 478:	28 60       	ori	r18, 0x08	; 8
 47a:	21 c0       	rjmp	.+66     	; 0x4be <vfprintf+0xca>
 47c:	27 fd       	sbrc	r18, 7
 47e:	27 c0       	rjmp	.+78     	; 0x4ce <vfprintf+0xda>
 480:	30 ed       	ldi	r19, 0xD0	; 208
 482:	38 0f       	add	r19, r24
 484:	3a 30       	cpi	r19, 0x0A	; 10
 486:	78 f4       	brcc	.+30     	; 0x4a6 <vfprintf+0xb2>
 488:	26 ff       	sbrs	r18, 6
 48a:	06 c0       	rjmp	.+12     	; 0x498 <vfprintf+0xa4>
 48c:	fa e0       	ldi	r31, 0x0A	; 10
 48e:	5f 9e       	mul	r5, r31
 490:	30 0d       	add	r19, r0
 492:	11 24       	eor	r1, r1
 494:	53 2e       	mov	r5, r19
 496:	13 c0       	rjmp	.+38     	; 0x4be <vfprintf+0xca>
 498:	8a e0       	ldi	r24, 0x0A	; 10
 49a:	38 9e       	mul	r3, r24
 49c:	30 0d       	add	r19, r0
 49e:	11 24       	eor	r1, r1
 4a0:	33 2e       	mov	r3, r19
 4a2:	20 62       	ori	r18, 0x20	; 32
 4a4:	0c c0       	rjmp	.+24     	; 0x4be <vfprintf+0xca>
 4a6:	8e 32       	cpi	r24, 0x2E	; 46
 4a8:	21 f4       	brne	.+8      	; 0x4b2 <vfprintf+0xbe>
 4aa:	26 fd       	sbrc	r18, 6
 4ac:	6b c1       	rjmp	.+726    	; 0x784 <__stack+0x285>
 4ae:	20 64       	ori	r18, 0x40	; 64
 4b0:	06 c0       	rjmp	.+12     	; 0x4be <vfprintf+0xca>
 4b2:	8c 36       	cpi	r24, 0x6C	; 108
 4b4:	11 f4       	brne	.+4      	; 0x4ba <vfprintf+0xc6>
 4b6:	20 68       	ori	r18, 0x80	; 128
 4b8:	02 c0       	rjmp	.+4      	; 0x4be <vfprintf+0xca>
 4ba:	88 36       	cpi	r24, 0x68	; 104
 4bc:	41 f4       	brne	.+16     	; 0x4ce <vfprintf+0xda>
 4be:	f6 01       	movw	r30, r12
 4c0:	93 fd       	sbrc	r25, 3
 4c2:	85 91       	lpm	r24, Z+
 4c4:	93 ff       	sbrs	r25, 3
 4c6:	81 91       	ld	r24, Z+
 4c8:	6f 01       	movw	r12, r30
 4ca:	81 11       	cpse	r24, r1
 4cc:	c1 cf       	rjmp	.-126    	; 0x450 <vfprintf+0x5c>
 4ce:	98 2f       	mov	r25, r24
 4d0:	9f 7d       	andi	r25, 0xDF	; 223
 4d2:	95 54       	subi	r25, 0x45	; 69
 4d4:	93 30       	cpi	r25, 0x03	; 3
 4d6:	28 f4       	brcc	.+10     	; 0x4e2 <vfprintf+0xee>
 4d8:	0c 5f       	subi	r16, 0xFC	; 252
 4da:	1f 4f       	sbci	r17, 0xFF	; 255
 4dc:	ff e3       	ldi	r31, 0x3F	; 63
 4de:	f9 83       	std	Y+1, r31	; 0x01
 4e0:	0d c0       	rjmp	.+26     	; 0x4fc <vfprintf+0x108>
 4e2:	83 36       	cpi	r24, 0x63	; 99
 4e4:	31 f0       	breq	.+12     	; 0x4f2 <vfprintf+0xfe>
 4e6:	83 37       	cpi	r24, 0x73	; 115
 4e8:	71 f0       	breq	.+28     	; 0x506 <__stack+0x7>
 4ea:	83 35       	cpi	r24, 0x53	; 83
 4ec:	09 f0       	breq	.+2      	; 0x4f0 <vfprintf+0xfc>
 4ee:	5b c0       	rjmp	.+182    	; 0x5a6 <__stack+0xa7>
 4f0:	22 c0       	rjmp	.+68     	; 0x536 <__stack+0x37>
 4f2:	f8 01       	movw	r30, r16
 4f4:	80 81       	ld	r24, Z
 4f6:	89 83       	std	Y+1, r24	; 0x01
 4f8:	0e 5f       	subi	r16, 0xFE	; 254
 4fa:	1f 4f       	sbci	r17, 0xFF	; 255
 4fc:	44 24       	eor	r4, r4
 4fe:	43 94       	inc	r4
 500:	51 2c       	mov	r5, r1
 502:	54 01       	movw	r10, r8
 504:	15 c0       	rjmp	.+42     	; 0x530 <__stack+0x31>
 506:	38 01       	movw	r6, r16
 508:	f2 e0       	ldi	r31, 0x02	; 2
 50a:	6f 0e       	add	r6, r31
 50c:	71 1c       	adc	r7, r1
 50e:	f8 01       	movw	r30, r16
 510:	a0 80       	ld	r10, Z
 512:	b1 80       	ldd	r11, Z+1	; 0x01
 514:	26 ff       	sbrs	r18, 6
 516:	03 c0       	rjmp	.+6      	; 0x51e <__stack+0x1f>
 518:	65 2d       	mov	r22, r5
 51a:	70 e0       	ldi	r23, 0x00	; 0
 51c:	02 c0       	rjmp	.+4      	; 0x522 <__stack+0x23>
 51e:	6f ef       	ldi	r22, 0xFF	; 255
 520:	7f ef       	ldi	r23, 0xFF	; 255
 522:	c5 01       	movw	r24, r10
 524:	2c 87       	std	Y+12, r18	; 0x0c
 526:	0e 94 21 05 	call	0xa42	; 0xa42 <strnlen>
 52a:	2c 01       	movw	r4, r24
 52c:	83 01       	movw	r16, r6
 52e:	2c 85       	ldd	r18, Y+12	; 0x0c
 530:	2f 77       	andi	r18, 0x7F	; 127
 532:	22 2e       	mov	r2, r18
 534:	17 c0       	rjmp	.+46     	; 0x564 <__stack+0x65>
 536:	38 01       	movw	r6, r16
 538:	f2 e0       	ldi	r31, 0x02	; 2
 53a:	6f 0e       	add	r6, r31
 53c:	71 1c       	adc	r7, r1
 53e:	f8 01       	movw	r30, r16
 540:	a0 80       	ld	r10, Z
 542:	b1 80       	ldd	r11, Z+1	; 0x01
 544:	26 ff       	sbrs	r18, 6
 546:	03 c0       	rjmp	.+6      	; 0x54e <__stack+0x4f>
 548:	65 2d       	mov	r22, r5
 54a:	70 e0       	ldi	r23, 0x00	; 0
 54c:	02 c0       	rjmp	.+4      	; 0x552 <__stack+0x53>
 54e:	6f ef       	ldi	r22, 0xFF	; 255
 550:	7f ef       	ldi	r23, 0xFF	; 255
 552:	c5 01       	movw	r24, r10
 554:	2c 87       	std	Y+12, r18	; 0x0c
 556:	0e 94 0f 05 	call	0xa1e	; 0xa1e <strnlen_P>
 55a:	2c 01       	movw	r4, r24
 55c:	2c 85       	ldd	r18, Y+12	; 0x0c
 55e:	20 68       	ori	r18, 0x80	; 128
 560:	22 2e       	mov	r2, r18
 562:	83 01       	movw	r16, r6
 564:	23 fc       	sbrc	r2, 3
 566:	1b c0       	rjmp	.+54     	; 0x59e <__stack+0x9f>
 568:	83 2d       	mov	r24, r3
 56a:	90 e0       	ldi	r25, 0x00	; 0
 56c:	48 16       	cp	r4, r24
 56e:	59 06       	cpc	r5, r25
 570:	b0 f4       	brcc	.+44     	; 0x59e <__stack+0x9f>
 572:	b7 01       	movw	r22, r14
 574:	80 e2       	ldi	r24, 0x20	; 32
 576:	90 e0       	ldi	r25, 0x00	; 0
 578:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 57c:	3a 94       	dec	r3
 57e:	f4 cf       	rjmp	.-24     	; 0x568 <__stack+0x69>
 580:	f5 01       	movw	r30, r10
 582:	27 fc       	sbrc	r2, 7
 584:	85 91       	lpm	r24, Z+
 586:	27 fe       	sbrs	r2, 7
 588:	81 91       	ld	r24, Z+
 58a:	5f 01       	movw	r10, r30
 58c:	b7 01       	movw	r22, r14
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 594:	31 10       	cpse	r3, r1
 596:	3a 94       	dec	r3
 598:	f1 e0       	ldi	r31, 0x01	; 1
 59a:	4f 1a       	sub	r4, r31
 59c:	51 08       	sbc	r5, r1
 59e:	41 14       	cp	r4, r1
 5a0:	51 04       	cpc	r5, r1
 5a2:	71 f7       	brne	.-36     	; 0x580 <__stack+0x81>
 5a4:	e5 c0       	rjmp	.+458    	; 0x770 <__stack+0x271>
 5a6:	84 36       	cpi	r24, 0x64	; 100
 5a8:	11 f0       	breq	.+4      	; 0x5ae <__stack+0xaf>
 5aa:	89 36       	cpi	r24, 0x69	; 105
 5ac:	39 f5       	brne	.+78     	; 0x5fc <__stack+0xfd>
 5ae:	f8 01       	movw	r30, r16
 5b0:	27 ff       	sbrs	r18, 7
 5b2:	07 c0       	rjmp	.+14     	; 0x5c2 <__stack+0xc3>
 5b4:	60 81       	ld	r22, Z
 5b6:	71 81       	ldd	r23, Z+1	; 0x01
 5b8:	82 81       	ldd	r24, Z+2	; 0x02
 5ba:	93 81       	ldd	r25, Z+3	; 0x03
 5bc:	0c 5f       	subi	r16, 0xFC	; 252
 5be:	1f 4f       	sbci	r17, 0xFF	; 255
 5c0:	08 c0       	rjmp	.+16     	; 0x5d2 <__stack+0xd3>
 5c2:	60 81       	ld	r22, Z
 5c4:	71 81       	ldd	r23, Z+1	; 0x01
 5c6:	88 27       	eor	r24, r24
 5c8:	77 fd       	sbrc	r23, 7
 5ca:	80 95       	com	r24
 5cc:	98 2f       	mov	r25, r24
 5ce:	0e 5f       	subi	r16, 0xFE	; 254
 5d0:	1f 4f       	sbci	r17, 0xFF	; 255
 5d2:	2f 76       	andi	r18, 0x6F	; 111
 5d4:	b2 2e       	mov	r11, r18
 5d6:	97 ff       	sbrs	r25, 7
 5d8:	09 c0       	rjmp	.+18     	; 0x5ec <__stack+0xed>
 5da:	90 95       	com	r25
 5dc:	80 95       	com	r24
 5de:	70 95       	com	r23
 5e0:	61 95       	neg	r22
 5e2:	7f 4f       	sbci	r23, 0xFF	; 255
 5e4:	8f 4f       	sbci	r24, 0xFF	; 255
 5e6:	9f 4f       	sbci	r25, 0xFF	; 255
 5e8:	20 68       	ori	r18, 0x80	; 128
 5ea:	b2 2e       	mov	r11, r18
 5ec:	2a e0       	ldi	r18, 0x0A	; 10
 5ee:	30 e0       	ldi	r19, 0x00	; 0
 5f0:	a4 01       	movw	r20, r8
 5f2:	0e 94 5e 05 	call	0xabc	; 0xabc <__ultoa_invert>
 5f6:	a8 2e       	mov	r10, r24
 5f8:	a8 18       	sub	r10, r8
 5fa:	44 c0       	rjmp	.+136    	; 0x684 <__stack+0x185>
 5fc:	85 37       	cpi	r24, 0x75	; 117
 5fe:	29 f4       	brne	.+10     	; 0x60a <__stack+0x10b>
 600:	2f 7e       	andi	r18, 0xEF	; 239
 602:	b2 2e       	mov	r11, r18
 604:	2a e0       	ldi	r18, 0x0A	; 10
 606:	30 e0       	ldi	r19, 0x00	; 0
 608:	25 c0       	rjmp	.+74     	; 0x654 <__stack+0x155>
 60a:	f2 2f       	mov	r31, r18
 60c:	f9 7f       	andi	r31, 0xF9	; 249
 60e:	bf 2e       	mov	r11, r31
 610:	8f 36       	cpi	r24, 0x6F	; 111
 612:	c1 f0       	breq	.+48     	; 0x644 <__stack+0x145>
 614:	18 f4       	brcc	.+6      	; 0x61c <__stack+0x11d>
 616:	88 35       	cpi	r24, 0x58	; 88
 618:	79 f0       	breq	.+30     	; 0x638 <__stack+0x139>
 61a:	b4 c0       	rjmp	.+360    	; 0x784 <__stack+0x285>
 61c:	80 37       	cpi	r24, 0x70	; 112
 61e:	19 f0       	breq	.+6      	; 0x626 <__stack+0x127>
 620:	88 37       	cpi	r24, 0x78	; 120
 622:	21 f0       	breq	.+8      	; 0x62c <__stack+0x12d>
 624:	af c0       	rjmp	.+350    	; 0x784 <__stack+0x285>
 626:	2f 2f       	mov	r18, r31
 628:	20 61       	ori	r18, 0x10	; 16
 62a:	b2 2e       	mov	r11, r18
 62c:	b4 fe       	sbrs	r11, 4
 62e:	0d c0       	rjmp	.+26     	; 0x64a <__stack+0x14b>
 630:	8b 2d       	mov	r24, r11
 632:	84 60       	ori	r24, 0x04	; 4
 634:	b8 2e       	mov	r11, r24
 636:	09 c0       	rjmp	.+18     	; 0x64a <__stack+0x14b>
 638:	24 ff       	sbrs	r18, 4
 63a:	0a c0       	rjmp	.+20     	; 0x650 <__stack+0x151>
 63c:	9f 2f       	mov	r25, r31
 63e:	96 60       	ori	r25, 0x06	; 6
 640:	b9 2e       	mov	r11, r25
 642:	06 c0       	rjmp	.+12     	; 0x650 <__stack+0x151>
 644:	28 e0       	ldi	r18, 0x08	; 8
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	05 c0       	rjmp	.+10     	; 0x654 <__stack+0x155>
 64a:	20 e1       	ldi	r18, 0x10	; 16
 64c:	30 e0       	ldi	r19, 0x00	; 0
 64e:	02 c0       	rjmp	.+4      	; 0x654 <__stack+0x155>
 650:	20 e1       	ldi	r18, 0x10	; 16
 652:	32 e0       	ldi	r19, 0x02	; 2
 654:	f8 01       	movw	r30, r16
 656:	b7 fe       	sbrs	r11, 7
 658:	07 c0       	rjmp	.+14     	; 0x668 <__stack+0x169>
 65a:	60 81       	ld	r22, Z
 65c:	71 81       	ldd	r23, Z+1	; 0x01
 65e:	82 81       	ldd	r24, Z+2	; 0x02
 660:	93 81       	ldd	r25, Z+3	; 0x03
 662:	0c 5f       	subi	r16, 0xFC	; 252
 664:	1f 4f       	sbci	r17, 0xFF	; 255
 666:	06 c0       	rjmp	.+12     	; 0x674 <__stack+0x175>
 668:	60 81       	ld	r22, Z
 66a:	71 81       	ldd	r23, Z+1	; 0x01
 66c:	80 e0       	ldi	r24, 0x00	; 0
 66e:	90 e0       	ldi	r25, 0x00	; 0
 670:	0e 5f       	subi	r16, 0xFE	; 254
 672:	1f 4f       	sbci	r17, 0xFF	; 255
 674:	a4 01       	movw	r20, r8
 676:	0e 94 5e 05 	call	0xabc	; 0xabc <__ultoa_invert>
 67a:	a8 2e       	mov	r10, r24
 67c:	a8 18       	sub	r10, r8
 67e:	fb 2d       	mov	r31, r11
 680:	ff 77       	andi	r31, 0x7F	; 127
 682:	bf 2e       	mov	r11, r31
 684:	b6 fe       	sbrs	r11, 6
 686:	0b c0       	rjmp	.+22     	; 0x69e <__stack+0x19f>
 688:	2b 2d       	mov	r18, r11
 68a:	2e 7f       	andi	r18, 0xFE	; 254
 68c:	a5 14       	cp	r10, r5
 68e:	50 f4       	brcc	.+20     	; 0x6a4 <__stack+0x1a5>
 690:	b4 fe       	sbrs	r11, 4
 692:	0a c0       	rjmp	.+20     	; 0x6a8 <__stack+0x1a9>
 694:	b2 fc       	sbrc	r11, 2
 696:	08 c0       	rjmp	.+16     	; 0x6a8 <__stack+0x1a9>
 698:	2b 2d       	mov	r18, r11
 69a:	2e 7e       	andi	r18, 0xEE	; 238
 69c:	05 c0       	rjmp	.+10     	; 0x6a8 <__stack+0x1a9>
 69e:	7a 2c       	mov	r7, r10
 6a0:	2b 2d       	mov	r18, r11
 6a2:	03 c0       	rjmp	.+6      	; 0x6aa <__stack+0x1ab>
 6a4:	7a 2c       	mov	r7, r10
 6a6:	01 c0       	rjmp	.+2      	; 0x6aa <__stack+0x1ab>
 6a8:	75 2c       	mov	r7, r5
 6aa:	24 ff       	sbrs	r18, 4
 6ac:	0d c0       	rjmp	.+26     	; 0x6c8 <__stack+0x1c9>
 6ae:	fe 01       	movw	r30, r28
 6b0:	ea 0d       	add	r30, r10
 6b2:	f1 1d       	adc	r31, r1
 6b4:	80 81       	ld	r24, Z
 6b6:	80 33       	cpi	r24, 0x30	; 48
 6b8:	11 f4       	brne	.+4      	; 0x6be <__stack+0x1bf>
 6ba:	29 7e       	andi	r18, 0xE9	; 233
 6bc:	09 c0       	rjmp	.+18     	; 0x6d0 <__stack+0x1d1>
 6be:	22 ff       	sbrs	r18, 2
 6c0:	06 c0       	rjmp	.+12     	; 0x6ce <__stack+0x1cf>
 6c2:	73 94       	inc	r7
 6c4:	73 94       	inc	r7
 6c6:	04 c0       	rjmp	.+8      	; 0x6d0 <__stack+0x1d1>
 6c8:	82 2f       	mov	r24, r18
 6ca:	86 78       	andi	r24, 0x86	; 134
 6cc:	09 f0       	breq	.+2      	; 0x6d0 <__stack+0x1d1>
 6ce:	73 94       	inc	r7
 6d0:	23 fd       	sbrc	r18, 3
 6d2:	13 c0       	rjmp	.+38     	; 0x6fa <__stack+0x1fb>
 6d4:	20 ff       	sbrs	r18, 0
 6d6:	06 c0       	rjmp	.+12     	; 0x6e4 <__stack+0x1e5>
 6d8:	5a 2c       	mov	r5, r10
 6da:	73 14       	cp	r7, r3
 6dc:	18 f4       	brcc	.+6      	; 0x6e4 <__stack+0x1e5>
 6de:	53 0c       	add	r5, r3
 6e0:	57 18       	sub	r5, r7
 6e2:	73 2c       	mov	r7, r3
 6e4:	73 14       	cp	r7, r3
 6e6:	68 f4       	brcc	.+26     	; 0x702 <__stack+0x203>
 6e8:	b7 01       	movw	r22, r14
 6ea:	80 e2       	ldi	r24, 0x20	; 32
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	2c 87       	std	Y+12, r18	; 0x0c
 6f0:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 6f4:	73 94       	inc	r7
 6f6:	2c 85       	ldd	r18, Y+12	; 0x0c
 6f8:	f5 cf       	rjmp	.-22     	; 0x6e4 <__stack+0x1e5>
 6fa:	73 14       	cp	r7, r3
 6fc:	10 f4       	brcc	.+4      	; 0x702 <__stack+0x203>
 6fe:	37 18       	sub	r3, r7
 700:	01 c0       	rjmp	.+2      	; 0x704 <__stack+0x205>
 702:	31 2c       	mov	r3, r1
 704:	24 ff       	sbrs	r18, 4
 706:	12 c0       	rjmp	.+36     	; 0x72c <__stack+0x22d>
 708:	b7 01       	movw	r22, r14
 70a:	80 e3       	ldi	r24, 0x30	; 48
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	2c 87       	std	Y+12, r18	; 0x0c
 710:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 714:	2c 85       	ldd	r18, Y+12	; 0x0c
 716:	22 ff       	sbrs	r18, 2
 718:	17 c0       	rjmp	.+46     	; 0x748 <__stack+0x249>
 71a:	21 ff       	sbrs	r18, 1
 71c:	03 c0       	rjmp	.+6      	; 0x724 <__stack+0x225>
 71e:	88 e5       	ldi	r24, 0x58	; 88
 720:	90 e0       	ldi	r25, 0x00	; 0
 722:	02 c0       	rjmp	.+4      	; 0x728 <__stack+0x229>
 724:	88 e7       	ldi	r24, 0x78	; 120
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	b7 01       	movw	r22, r14
 72a:	0c c0       	rjmp	.+24     	; 0x744 <__stack+0x245>
 72c:	82 2f       	mov	r24, r18
 72e:	86 78       	andi	r24, 0x86	; 134
 730:	59 f0       	breq	.+22     	; 0x748 <__stack+0x249>
 732:	21 fd       	sbrc	r18, 1
 734:	02 c0       	rjmp	.+4      	; 0x73a <__stack+0x23b>
 736:	80 e2       	ldi	r24, 0x20	; 32
 738:	01 c0       	rjmp	.+2      	; 0x73c <__stack+0x23d>
 73a:	8b e2       	ldi	r24, 0x2B	; 43
 73c:	27 fd       	sbrc	r18, 7
 73e:	8d e2       	ldi	r24, 0x2D	; 45
 740:	b7 01       	movw	r22, r14
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 748:	a5 14       	cp	r10, r5
 74a:	38 f4       	brcc	.+14     	; 0x75a <__stack+0x25b>
 74c:	b7 01       	movw	r22, r14
 74e:	80 e3       	ldi	r24, 0x30	; 48
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 756:	5a 94       	dec	r5
 758:	f7 cf       	rjmp	.-18     	; 0x748 <__stack+0x249>
 75a:	aa 94       	dec	r10
 75c:	f4 01       	movw	r30, r8
 75e:	ea 0d       	add	r30, r10
 760:	f1 1d       	adc	r31, r1
 762:	80 81       	ld	r24, Z
 764:	b7 01       	movw	r22, r14
 766:	90 e0       	ldi	r25, 0x00	; 0
 768:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 76c:	a1 10       	cpse	r10, r1
 76e:	f5 cf       	rjmp	.-22     	; 0x75a <__stack+0x25b>
 770:	33 20       	and	r3, r3
 772:	09 f4       	brne	.+2      	; 0x776 <__stack+0x277>
 774:	51 ce       	rjmp	.-862    	; 0x418 <vfprintf+0x24>
 776:	b7 01       	movw	r22, r14
 778:	80 e2       	ldi	r24, 0x20	; 32
 77a:	90 e0       	ldi	r25, 0x00	; 0
 77c:	0e 94 2c 05 	call	0xa58	; 0xa58 <fputc>
 780:	3a 94       	dec	r3
 782:	f6 cf       	rjmp	.-20     	; 0x770 <__stack+0x271>
 784:	f7 01       	movw	r30, r14
 786:	86 81       	ldd	r24, Z+6	; 0x06
 788:	97 81       	ldd	r25, Z+7	; 0x07
 78a:	02 c0       	rjmp	.+4      	; 0x790 <__stack+0x291>
 78c:	8f ef       	ldi	r24, 0xFF	; 255
 78e:	9f ef       	ldi	r25, 0xFF	; 255
 790:	2c 96       	adiw	r28, 0x0c	; 12
 792:	e2 e1       	ldi	r30, 0x12	; 18
 794:	0c 94 0a 06 	jmp	0xc14	; 0xc14 <__epilogue_restores__>

00000798 <calloc>:
 798:	0f 93       	push	r16
 79a:	1f 93       	push	r17
 79c:	cf 93       	push	r28
 79e:	df 93       	push	r29
 7a0:	86 9f       	mul	r24, r22
 7a2:	80 01       	movw	r16, r0
 7a4:	87 9f       	mul	r24, r23
 7a6:	10 0d       	add	r17, r0
 7a8:	96 9f       	mul	r25, r22
 7aa:	10 0d       	add	r17, r0
 7ac:	11 24       	eor	r1, r1
 7ae:	c8 01       	movw	r24, r16
 7b0:	0e 94 e8 03 	call	0x7d0	; 0x7d0 <malloc>
 7b4:	ec 01       	movw	r28, r24
 7b6:	00 97       	sbiw	r24, 0x00	; 0
 7b8:	29 f0       	breq	.+10     	; 0x7c4 <calloc+0x2c>
 7ba:	a8 01       	movw	r20, r16
 7bc:	60 e0       	ldi	r22, 0x00	; 0
 7be:	70 e0       	ldi	r23, 0x00	; 0
 7c0:	0e 94 1a 05 	call	0xa34	; 0xa34 <memset>
 7c4:	ce 01       	movw	r24, r28
 7c6:	df 91       	pop	r29
 7c8:	cf 91       	pop	r28
 7ca:	1f 91       	pop	r17
 7cc:	0f 91       	pop	r16
 7ce:	08 95       	ret

000007d0 <malloc>:
 7d0:	cf 93       	push	r28
 7d2:	df 93       	push	r29
 7d4:	82 30       	cpi	r24, 0x02	; 2
 7d6:	91 05       	cpc	r25, r1
 7d8:	10 f4       	brcc	.+4      	; 0x7de <malloc+0xe>
 7da:	82 e0       	ldi	r24, 0x02	; 2
 7dc:	90 e0       	ldi	r25, 0x00	; 0
 7de:	e0 91 10 02 	lds	r30, 0x0210
 7e2:	f0 91 11 02 	lds	r31, 0x0211
 7e6:	20 e0       	ldi	r18, 0x00	; 0
 7e8:	30 e0       	ldi	r19, 0x00	; 0
 7ea:	a0 e0       	ldi	r26, 0x00	; 0
 7ec:	b0 e0       	ldi	r27, 0x00	; 0
 7ee:	30 97       	sbiw	r30, 0x00	; 0
 7f0:	39 f1       	breq	.+78     	; 0x840 <malloc+0x70>
 7f2:	40 81       	ld	r20, Z
 7f4:	51 81       	ldd	r21, Z+1	; 0x01
 7f6:	48 17       	cp	r20, r24
 7f8:	59 07       	cpc	r21, r25
 7fa:	b8 f0       	brcs	.+46     	; 0x82a <malloc+0x5a>
 7fc:	48 17       	cp	r20, r24
 7fe:	59 07       	cpc	r21, r25
 800:	71 f4       	brne	.+28     	; 0x81e <malloc+0x4e>
 802:	82 81       	ldd	r24, Z+2	; 0x02
 804:	93 81       	ldd	r25, Z+3	; 0x03
 806:	10 97       	sbiw	r26, 0x00	; 0
 808:	29 f0       	breq	.+10     	; 0x814 <malloc+0x44>
 80a:	13 96       	adiw	r26, 0x03	; 3
 80c:	9c 93       	st	X, r25
 80e:	8e 93       	st	-X, r24
 810:	12 97       	sbiw	r26, 0x02	; 2
 812:	2c c0       	rjmp	.+88     	; 0x86c <malloc+0x9c>
 814:	90 93 11 02 	sts	0x0211, r25
 818:	80 93 10 02 	sts	0x0210, r24
 81c:	27 c0       	rjmp	.+78     	; 0x86c <malloc+0x9c>
 81e:	21 15       	cp	r18, r1
 820:	31 05       	cpc	r19, r1
 822:	31 f0       	breq	.+12     	; 0x830 <malloc+0x60>
 824:	42 17       	cp	r20, r18
 826:	53 07       	cpc	r21, r19
 828:	18 f0       	brcs	.+6      	; 0x830 <malloc+0x60>
 82a:	a9 01       	movw	r20, r18
 82c:	db 01       	movw	r26, r22
 82e:	01 c0       	rjmp	.+2      	; 0x832 <malloc+0x62>
 830:	ef 01       	movw	r28, r30
 832:	9a 01       	movw	r18, r20
 834:	bd 01       	movw	r22, r26
 836:	df 01       	movw	r26, r30
 838:	02 80       	ldd	r0, Z+2	; 0x02
 83a:	f3 81       	ldd	r31, Z+3	; 0x03
 83c:	e0 2d       	mov	r30, r0
 83e:	d7 cf       	rjmp	.-82     	; 0x7ee <malloc+0x1e>
 840:	21 15       	cp	r18, r1
 842:	31 05       	cpc	r19, r1
 844:	f9 f0       	breq	.+62     	; 0x884 <malloc+0xb4>
 846:	28 1b       	sub	r18, r24
 848:	39 0b       	sbc	r19, r25
 84a:	24 30       	cpi	r18, 0x04	; 4
 84c:	31 05       	cpc	r19, r1
 84e:	80 f4       	brcc	.+32     	; 0x870 <malloc+0xa0>
 850:	8a 81       	ldd	r24, Y+2	; 0x02
 852:	9b 81       	ldd	r25, Y+3	; 0x03
 854:	61 15       	cp	r22, r1
 856:	71 05       	cpc	r23, r1
 858:	21 f0       	breq	.+8      	; 0x862 <malloc+0x92>
 85a:	fb 01       	movw	r30, r22
 85c:	93 83       	std	Z+3, r25	; 0x03
 85e:	82 83       	std	Z+2, r24	; 0x02
 860:	04 c0       	rjmp	.+8      	; 0x86a <malloc+0x9a>
 862:	90 93 11 02 	sts	0x0211, r25
 866:	80 93 10 02 	sts	0x0210, r24
 86a:	fe 01       	movw	r30, r28
 86c:	32 96       	adiw	r30, 0x02	; 2
 86e:	44 c0       	rjmp	.+136    	; 0x8f8 <malloc+0x128>
 870:	fe 01       	movw	r30, r28
 872:	e2 0f       	add	r30, r18
 874:	f3 1f       	adc	r31, r19
 876:	81 93       	st	Z+, r24
 878:	91 93       	st	Z+, r25
 87a:	22 50       	subi	r18, 0x02	; 2
 87c:	31 09       	sbc	r19, r1
 87e:	39 83       	std	Y+1, r19	; 0x01
 880:	28 83       	st	Y, r18
 882:	3a c0       	rjmp	.+116    	; 0x8f8 <malloc+0x128>
 884:	20 91 0e 02 	lds	r18, 0x020E
 888:	30 91 0f 02 	lds	r19, 0x020F
 88c:	23 2b       	or	r18, r19
 88e:	41 f4       	brne	.+16     	; 0x8a0 <malloc+0xd0>
 890:	20 91 06 01 	lds	r18, 0x0106
 894:	30 91 07 01 	lds	r19, 0x0107
 898:	30 93 0f 02 	sts	0x020F, r19
 89c:	20 93 0e 02 	sts	0x020E, r18
 8a0:	20 91 04 01 	lds	r18, 0x0104
 8a4:	30 91 05 01 	lds	r19, 0x0105
 8a8:	21 15       	cp	r18, r1
 8aa:	31 05       	cpc	r19, r1
 8ac:	41 f4       	brne	.+16     	; 0x8be <malloc+0xee>
 8ae:	2d b7       	in	r18, 0x3d	; 61
 8b0:	3e b7       	in	r19, 0x3e	; 62
 8b2:	40 91 08 01 	lds	r20, 0x0108
 8b6:	50 91 09 01 	lds	r21, 0x0109
 8ba:	24 1b       	sub	r18, r20
 8bc:	35 0b       	sbc	r19, r21
 8be:	e0 91 0e 02 	lds	r30, 0x020E
 8c2:	f0 91 0f 02 	lds	r31, 0x020F
 8c6:	e2 17       	cp	r30, r18
 8c8:	f3 07       	cpc	r31, r19
 8ca:	a0 f4       	brcc	.+40     	; 0x8f4 <malloc+0x124>
 8cc:	2e 1b       	sub	r18, r30
 8ce:	3f 0b       	sbc	r19, r31
 8d0:	28 17       	cp	r18, r24
 8d2:	39 07       	cpc	r19, r25
 8d4:	78 f0       	brcs	.+30     	; 0x8f4 <malloc+0x124>
 8d6:	ac 01       	movw	r20, r24
 8d8:	4e 5f       	subi	r20, 0xFE	; 254
 8da:	5f 4f       	sbci	r21, 0xFF	; 255
 8dc:	24 17       	cp	r18, r20
 8de:	35 07       	cpc	r19, r21
 8e0:	48 f0       	brcs	.+18     	; 0x8f4 <malloc+0x124>
 8e2:	4e 0f       	add	r20, r30
 8e4:	5f 1f       	adc	r21, r31
 8e6:	50 93 0f 02 	sts	0x020F, r21
 8ea:	40 93 0e 02 	sts	0x020E, r20
 8ee:	81 93       	st	Z+, r24
 8f0:	91 93       	st	Z+, r25
 8f2:	02 c0       	rjmp	.+4      	; 0x8f8 <malloc+0x128>
 8f4:	e0 e0       	ldi	r30, 0x00	; 0
 8f6:	f0 e0       	ldi	r31, 0x00	; 0
 8f8:	cf 01       	movw	r24, r30
 8fa:	df 91       	pop	r29
 8fc:	cf 91       	pop	r28
 8fe:	08 95       	ret

00000900 <free>:
 900:	cf 93       	push	r28
 902:	df 93       	push	r29
 904:	00 97       	sbiw	r24, 0x00	; 0
 906:	09 f4       	brne	.+2      	; 0x90a <free+0xa>
 908:	87 c0       	rjmp	.+270    	; 0xa18 <free+0x118>
 90a:	fc 01       	movw	r30, r24
 90c:	32 97       	sbiw	r30, 0x02	; 2
 90e:	13 82       	std	Z+3, r1	; 0x03
 910:	12 82       	std	Z+2, r1	; 0x02
 912:	c0 91 10 02 	lds	r28, 0x0210
 916:	d0 91 11 02 	lds	r29, 0x0211
 91a:	20 97       	sbiw	r28, 0x00	; 0
 91c:	81 f4       	brne	.+32     	; 0x93e <free+0x3e>
 91e:	20 81       	ld	r18, Z
 920:	31 81       	ldd	r19, Z+1	; 0x01
 922:	28 0f       	add	r18, r24
 924:	39 1f       	adc	r19, r25
 926:	80 91 0e 02 	lds	r24, 0x020E
 92a:	90 91 0f 02 	lds	r25, 0x020F
 92e:	82 17       	cp	r24, r18
 930:	93 07       	cpc	r25, r19
 932:	79 f5       	brne	.+94     	; 0x992 <free+0x92>
 934:	f0 93 0f 02 	sts	0x020F, r31
 938:	e0 93 0e 02 	sts	0x020E, r30
 93c:	6d c0       	rjmp	.+218    	; 0xa18 <free+0x118>
 93e:	de 01       	movw	r26, r28
 940:	20 e0       	ldi	r18, 0x00	; 0
 942:	30 e0       	ldi	r19, 0x00	; 0
 944:	ae 17       	cp	r26, r30
 946:	bf 07       	cpc	r27, r31
 948:	50 f4       	brcc	.+20     	; 0x95e <free+0x5e>
 94a:	12 96       	adiw	r26, 0x02	; 2
 94c:	4d 91       	ld	r20, X+
 94e:	5c 91       	ld	r21, X
 950:	13 97       	sbiw	r26, 0x03	; 3
 952:	9d 01       	movw	r18, r26
 954:	41 15       	cp	r20, r1
 956:	51 05       	cpc	r21, r1
 958:	09 f1       	breq	.+66     	; 0x99c <free+0x9c>
 95a:	da 01       	movw	r26, r20
 95c:	f3 cf       	rjmp	.-26     	; 0x944 <free+0x44>
 95e:	b3 83       	std	Z+3, r27	; 0x03
 960:	a2 83       	std	Z+2, r26	; 0x02
 962:	40 81       	ld	r20, Z
 964:	51 81       	ldd	r21, Z+1	; 0x01
 966:	84 0f       	add	r24, r20
 968:	95 1f       	adc	r25, r21
 96a:	8a 17       	cp	r24, r26
 96c:	9b 07       	cpc	r25, r27
 96e:	71 f4       	brne	.+28     	; 0x98c <free+0x8c>
 970:	8d 91       	ld	r24, X+
 972:	9c 91       	ld	r25, X
 974:	11 97       	sbiw	r26, 0x01	; 1
 976:	84 0f       	add	r24, r20
 978:	95 1f       	adc	r25, r21
 97a:	02 96       	adiw	r24, 0x02	; 2
 97c:	91 83       	std	Z+1, r25	; 0x01
 97e:	80 83       	st	Z, r24
 980:	12 96       	adiw	r26, 0x02	; 2
 982:	8d 91       	ld	r24, X+
 984:	9c 91       	ld	r25, X
 986:	13 97       	sbiw	r26, 0x03	; 3
 988:	93 83       	std	Z+3, r25	; 0x03
 98a:	82 83       	std	Z+2, r24	; 0x02
 98c:	21 15       	cp	r18, r1
 98e:	31 05       	cpc	r19, r1
 990:	29 f4       	brne	.+10     	; 0x99c <free+0x9c>
 992:	f0 93 11 02 	sts	0x0211, r31
 996:	e0 93 10 02 	sts	0x0210, r30
 99a:	3e c0       	rjmp	.+124    	; 0xa18 <free+0x118>
 99c:	d9 01       	movw	r26, r18
 99e:	13 96       	adiw	r26, 0x03	; 3
 9a0:	fc 93       	st	X, r31
 9a2:	ee 93       	st	-X, r30
 9a4:	12 97       	sbiw	r26, 0x02	; 2
 9a6:	4d 91       	ld	r20, X+
 9a8:	5d 91       	ld	r21, X+
 9aa:	a4 0f       	add	r26, r20
 9ac:	b5 1f       	adc	r27, r21
 9ae:	ea 17       	cp	r30, r26
 9b0:	fb 07       	cpc	r31, r27
 9b2:	79 f4       	brne	.+30     	; 0x9d2 <free+0xd2>
 9b4:	80 81       	ld	r24, Z
 9b6:	91 81       	ldd	r25, Z+1	; 0x01
 9b8:	84 0f       	add	r24, r20
 9ba:	95 1f       	adc	r25, r21
 9bc:	02 96       	adiw	r24, 0x02	; 2
 9be:	d9 01       	movw	r26, r18
 9c0:	11 96       	adiw	r26, 0x01	; 1
 9c2:	9c 93       	st	X, r25
 9c4:	8e 93       	st	-X, r24
 9c6:	82 81       	ldd	r24, Z+2	; 0x02
 9c8:	93 81       	ldd	r25, Z+3	; 0x03
 9ca:	13 96       	adiw	r26, 0x03	; 3
 9cc:	9c 93       	st	X, r25
 9ce:	8e 93       	st	-X, r24
 9d0:	12 97       	sbiw	r26, 0x02	; 2
 9d2:	e0 e0       	ldi	r30, 0x00	; 0
 9d4:	f0 e0       	ldi	r31, 0x00	; 0
 9d6:	8a 81       	ldd	r24, Y+2	; 0x02
 9d8:	9b 81       	ldd	r25, Y+3	; 0x03
 9da:	00 97       	sbiw	r24, 0x00	; 0
 9dc:	19 f0       	breq	.+6      	; 0x9e4 <free+0xe4>
 9de:	fe 01       	movw	r30, r28
 9e0:	ec 01       	movw	r28, r24
 9e2:	f9 cf       	rjmp	.-14     	; 0x9d6 <free+0xd6>
 9e4:	ce 01       	movw	r24, r28
 9e6:	02 96       	adiw	r24, 0x02	; 2
 9e8:	28 81       	ld	r18, Y
 9ea:	39 81       	ldd	r19, Y+1	; 0x01
 9ec:	82 0f       	add	r24, r18
 9ee:	93 1f       	adc	r25, r19
 9f0:	20 91 0e 02 	lds	r18, 0x020E
 9f4:	30 91 0f 02 	lds	r19, 0x020F
 9f8:	28 17       	cp	r18, r24
 9fa:	39 07       	cpc	r19, r25
 9fc:	69 f4       	brne	.+26     	; 0xa18 <free+0x118>
 9fe:	30 97       	sbiw	r30, 0x00	; 0
 a00:	29 f4       	brne	.+10     	; 0xa0c <free+0x10c>
 a02:	10 92 11 02 	sts	0x0211, r1
 a06:	10 92 10 02 	sts	0x0210, r1
 a0a:	02 c0       	rjmp	.+4      	; 0xa10 <free+0x110>
 a0c:	13 82       	std	Z+3, r1	; 0x03
 a0e:	12 82       	std	Z+2, r1	; 0x02
 a10:	d0 93 0f 02 	sts	0x020F, r29
 a14:	c0 93 0e 02 	sts	0x020E, r28
 a18:	df 91       	pop	r29
 a1a:	cf 91       	pop	r28
 a1c:	08 95       	ret

00000a1e <strnlen_P>:
 a1e:	fc 01       	movw	r30, r24
 a20:	05 90       	lpm	r0, Z+
 a22:	61 50       	subi	r22, 0x01	; 1
 a24:	70 40       	sbci	r23, 0x00	; 0
 a26:	01 10       	cpse	r0, r1
 a28:	d8 f7       	brcc	.-10     	; 0xa20 <strnlen_P+0x2>
 a2a:	80 95       	com	r24
 a2c:	90 95       	com	r25
 a2e:	8e 0f       	add	r24, r30
 a30:	9f 1f       	adc	r25, r31
 a32:	08 95       	ret

00000a34 <memset>:
 a34:	dc 01       	movw	r26, r24
 a36:	01 c0       	rjmp	.+2      	; 0xa3a <memset+0x6>
 a38:	6d 93       	st	X+, r22
 a3a:	41 50       	subi	r20, 0x01	; 1
 a3c:	50 40       	sbci	r21, 0x00	; 0
 a3e:	e0 f7       	brcc	.-8      	; 0xa38 <memset+0x4>
 a40:	08 95       	ret

00000a42 <strnlen>:
 a42:	fc 01       	movw	r30, r24
 a44:	61 50       	subi	r22, 0x01	; 1
 a46:	70 40       	sbci	r23, 0x00	; 0
 a48:	01 90       	ld	r0, Z+
 a4a:	01 10       	cpse	r0, r1
 a4c:	d8 f7       	brcc	.-10     	; 0xa44 <strnlen+0x2>
 a4e:	80 95       	com	r24
 a50:	90 95       	com	r25
 a52:	8e 0f       	add	r24, r30
 a54:	9f 1f       	adc	r25, r31
 a56:	08 95       	ret

00000a58 <fputc>:
 a58:	0f 93       	push	r16
 a5a:	1f 93       	push	r17
 a5c:	cf 93       	push	r28
 a5e:	df 93       	push	r29
 a60:	18 2f       	mov	r17, r24
 a62:	09 2f       	mov	r16, r25
 a64:	eb 01       	movw	r28, r22
 a66:	8b 81       	ldd	r24, Y+3	; 0x03
 a68:	81 fd       	sbrc	r24, 1
 a6a:	03 c0       	rjmp	.+6      	; 0xa72 <fputc+0x1a>
 a6c:	8f ef       	ldi	r24, 0xFF	; 255
 a6e:	9f ef       	ldi	r25, 0xFF	; 255
 a70:	20 c0       	rjmp	.+64     	; 0xab2 <fputc+0x5a>
 a72:	82 ff       	sbrs	r24, 2
 a74:	10 c0       	rjmp	.+32     	; 0xa96 <fputc+0x3e>
 a76:	4e 81       	ldd	r20, Y+6	; 0x06
 a78:	5f 81       	ldd	r21, Y+7	; 0x07
 a7a:	2c 81       	ldd	r18, Y+4	; 0x04
 a7c:	3d 81       	ldd	r19, Y+5	; 0x05
 a7e:	42 17       	cp	r20, r18
 a80:	53 07       	cpc	r21, r19
 a82:	7c f4       	brge	.+30     	; 0xaa2 <fputc+0x4a>
 a84:	e8 81       	ld	r30, Y
 a86:	f9 81       	ldd	r31, Y+1	; 0x01
 a88:	9f 01       	movw	r18, r30
 a8a:	2f 5f       	subi	r18, 0xFF	; 255
 a8c:	3f 4f       	sbci	r19, 0xFF	; 255
 a8e:	39 83       	std	Y+1, r19	; 0x01
 a90:	28 83       	st	Y, r18
 a92:	10 83       	st	Z, r17
 a94:	06 c0       	rjmp	.+12     	; 0xaa2 <fputc+0x4a>
 a96:	e8 85       	ldd	r30, Y+8	; 0x08
 a98:	f9 85       	ldd	r31, Y+9	; 0x09
 a9a:	81 2f       	mov	r24, r17
 a9c:	09 95       	icall
 a9e:	89 2b       	or	r24, r25
 aa0:	29 f7       	brne	.-54     	; 0xa6c <fputc+0x14>
 aa2:	2e 81       	ldd	r18, Y+6	; 0x06
 aa4:	3f 81       	ldd	r19, Y+7	; 0x07
 aa6:	2f 5f       	subi	r18, 0xFF	; 255
 aa8:	3f 4f       	sbci	r19, 0xFF	; 255
 aaa:	3f 83       	std	Y+7, r19	; 0x07
 aac:	2e 83       	std	Y+6, r18	; 0x06
 aae:	81 2f       	mov	r24, r17
 ab0:	90 2f       	mov	r25, r16
 ab2:	df 91       	pop	r29
 ab4:	cf 91       	pop	r28
 ab6:	1f 91       	pop	r17
 ab8:	0f 91       	pop	r16
 aba:	08 95       	ret

00000abc <__ultoa_invert>:
 abc:	fa 01       	movw	r30, r20
 abe:	aa 27       	eor	r26, r26
 ac0:	28 30       	cpi	r18, 0x08	; 8
 ac2:	51 f1       	breq	.+84     	; 0xb18 <__ultoa_invert+0x5c>
 ac4:	20 31       	cpi	r18, 0x10	; 16
 ac6:	81 f1       	breq	.+96     	; 0xb28 <__ultoa_invert+0x6c>
 ac8:	e8 94       	clt
 aca:	6f 93       	push	r22
 acc:	6e 7f       	andi	r22, 0xFE	; 254
 ace:	6e 5f       	subi	r22, 0xFE	; 254
 ad0:	7f 4f       	sbci	r23, 0xFF	; 255
 ad2:	8f 4f       	sbci	r24, 0xFF	; 255
 ad4:	9f 4f       	sbci	r25, 0xFF	; 255
 ad6:	af 4f       	sbci	r26, 0xFF	; 255
 ad8:	b1 e0       	ldi	r27, 0x01	; 1
 ada:	3e d0       	rcall	.+124    	; 0xb58 <__ultoa_invert+0x9c>
 adc:	b4 e0       	ldi	r27, 0x04	; 4
 ade:	3c d0       	rcall	.+120    	; 0xb58 <__ultoa_invert+0x9c>
 ae0:	67 0f       	add	r22, r23
 ae2:	78 1f       	adc	r23, r24
 ae4:	89 1f       	adc	r24, r25
 ae6:	9a 1f       	adc	r25, r26
 ae8:	a1 1d       	adc	r26, r1
 aea:	68 0f       	add	r22, r24
 aec:	79 1f       	adc	r23, r25
 aee:	8a 1f       	adc	r24, r26
 af0:	91 1d       	adc	r25, r1
 af2:	a1 1d       	adc	r26, r1
 af4:	6a 0f       	add	r22, r26
 af6:	71 1d       	adc	r23, r1
 af8:	81 1d       	adc	r24, r1
 afa:	91 1d       	adc	r25, r1
 afc:	a1 1d       	adc	r26, r1
 afe:	20 d0       	rcall	.+64     	; 0xb40 <__ultoa_invert+0x84>
 b00:	09 f4       	brne	.+2      	; 0xb04 <__ultoa_invert+0x48>
 b02:	68 94       	set
 b04:	3f 91       	pop	r19
 b06:	2a e0       	ldi	r18, 0x0A	; 10
 b08:	26 9f       	mul	r18, r22
 b0a:	11 24       	eor	r1, r1
 b0c:	30 19       	sub	r19, r0
 b0e:	30 5d       	subi	r19, 0xD0	; 208
 b10:	31 93       	st	Z+, r19
 b12:	de f6       	brtc	.-74     	; 0xaca <__ultoa_invert+0xe>
 b14:	cf 01       	movw	r24, r30
 b16:	08 95       	ret
 b18:	46 2f       	mov	r20, r22
 b1a:	47 70       	andi	r20, 0x07	; 7
 b1c:	40 5d       	subi	r20, 0xD0	; 208
 b1e:	41 93       	st	Z+, r20
 b20:	b3 e0       	ldi	r27, 0x03	; 3
 b22:	0f d0       	rcall	.+30     	; 0xb42 <__ultoa_invert+0x86>
 b24:	c9 f7       	brne	.-14     	; 0xb18 <__ultoa_invert+0x5c>
 b26:	f6 cf       	rjmp	.-20     	; 0xb14 <__ultoa_invert+0x58>
 b28:	46 2f       	mov	r20, r22
 b2a:	4f 70       	andi	r20, 0x0F	; 15
 b2c:	40 5d       	subi	r20, 0xD0	; 208
 b2e:	4a 33       	cpi	r20, 0x3A	; 58
 b30:	18 f0       	brcs	.+6      	; 0xb38 <__ultoa_invert+0x7c>
 b32:	49 5d       	subi	r20, 0xD9	; 217
 b34:	31 fd       	sbrc	r19, 1
 b36:	40 52       	subi	r20, 0x20	; 32
 b38:	41 93       	st	Z+, r20
 b3a:	02 d0       	rcall	.+4      	; 0xb40 <__ultoa_invert+0x84>
 b3c:	a9 f7       	brne	.-22     	; 0xb28 <__ultoa_invert+0x6c>
 b3e:	ea cf       	rjmp	.-44     	; 0xb14 <__ultoa_invert+0x58>
 b40:	b4 e0       	ldi	r27, 0x04	; 4
 b42:	a6 95       	lsr	r26
 b44:	97 95       	ror	r25
 b46:	87 95       	ror	r24
 b48:	77 95       	ror	r23
 b4a:	67 95       	ror	r22
 b4c:	ba 95       	dec	r27
 b4e:	c9 f7       	brne	.-14     	; 0xb42 <__ultoa_invert+0x86>
 b50:	00 97       	sbiw	r24, 0x00	; 0
 b52:	61 05       	cpc	r22, r1
 b54:	71 05       	cpc	r23, r1
 b56:	08 95       	ret
 b58:	9b 01       	movw	r18, r22
 b5a:	ac 01       	movw	r20, r24
 b5c:	0a 2e       	mov	r0, r26
 b5e:	06 94       	lsr	r0
 b60:	57 95       	ror	r21
 b62:	47 95       	ror	r20
 b64:	37 95       	ror	r19
 b66:	27 95       	ror	r18
 b68:	ba 95       	dec	r27
 b6a:	c9 f7       	brne	.-14     	; 0xb5e <__ultoa_invert+0xa2>
 b6c:	62 0f       	add	r22, r18
 b6e:	73 1f       	adc	r23, r19
 b70:	84 1f       	adc	r24, r20
 b72:	95 1f       	adc	r25, r21
 b74:	a0 1d       	adc	r26, r0
 b76:	08 95       	ret

00000b78 <__divmodsi4>:
 b78:	05 2e       	mov	r0, r21
 b7a:	97 fb       	bst	r25, 7
 b7c:	1e f4       	brtc	.+6      	; 0xb84 <__divmodsi4+0xc>
 b7e:	00 94       	com	r0
 b80:	0e 94 d3 05 	call	0xba6	; 0xba6 <__negsi2>
 b84:	57 fd       	sbrc	r21, 7
 b86:	07 d0       	rcall	.+14     	; 0xb96 <__divmodsi4_neg2>
 b88:	0e 94 25 06 	call	0xc4a	; 0xc4a <__udivmodsi4>
 b8c:	07 fc       	sbrc	r0, 7
 b8e:	03 d0       	rcall	.+6      	; 0xb96 <__divmodsi4_neg2>
 b90:	4e f4       	brtc	.+18     	; 0xba4 <__divmodsi4_exit>
 b92:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__negsi2>

00000b96 <__divmodsi4_neg2>:
 b96:	50 95       	com	r21
 b98:	40 95       	com	r20
 b9a:	30 95       	com	r19
 b9c:	21 95       	neg	r18
 b9e:	3f 4f       	sbci	r19, 0xFF	; 255
 ba0:	4f 4f       	sbci	r20, 0xFF	; 255
 ba2:	5f 4f       	sbci	r21, 0xFF	; 255

00000ba4 <__divmodsi4_exit>:
 ba4:	08 95       	ret

00000ba6 <__negsi2>:
 ba6:	90 95       	com	r25
 ba8:	80 95       	com	r24
 baa:	70 95       	com	r23
 bac:	61 95       	neg	r22
 bae:	7f 4f       	sbci	r23, 0xFF	; 255
 bb0:	8f 4f       	sbci	r24, 0xFF	; 255
 bb2:	9f 4f       	sbci	r25, 0xFF	; 255
 bb4:	08 95       	ret

00000bb6 <__muluhisi3>:
 bb6:	0e 94 47 06 	call	0xc8e	; 0xc8e <__umulhisi3>
 bba:	a5 9f       	mul	r26, r21
 bbc:	90 0d       	add	r25, r0
 bbe:	b4 9f       	mul	r27, r20
 bc0:	90 0d       	add	r25, r0
 bc2:	a4 9f       	mul	r26, r20
 bc4:	80 0d       	add	r24, r0
 bc6:	91 1d       	adc	r25, r1
 bc8:	11 24       	eor	r1, r1
 bca:	08 95       	ret

00000bcc <__mulshisi3>:
 bcc:	b7 ff       	sbrs	r27, 7
 bce:	0c 94 db 05 	jmp	0xbb6	; 0xbb6 <__muluhisi3>

00000bd2 <__mulohisi3>:
 bd2:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__muluhisi3>
 bd6:	82 1b       	sub	r24, r18
 bd8:	93 0b       	sbc	r25, r19
 bda:	08 95       	ret

00000bdc <__prologue_saves__>:
 bdc:	2f 92       	push	r2
 bde:	3f 92       	push	r3
 be0:	4f 92       	push	r4
 be2:	5f 92       	push	r5
 be4:	6f 92       	push	r6
 be6:	7f 92       	push	r7
 be8:	8f 92       	push	r8
 bea:	9f 92       	push	r9
 bec:	af 92       	push	r10
 bee:	bf 92       	push	r11
 bf0:	cf 92       	push	r12
 bf2:	df 92       	push	r13
 bf4:	ef 92       	push	r14
 bf6:	ff 92       	push	r15
 bf8:	0f 93       	push	r16
 bfa:	1f 93       	push	r17
 bfc:	cf 93       	push	r28
 bfe:	df 93       	push	r29
 c00:	cd b7       	in	r28, 0x3d	; 61
 c02:	de b7       	in	r29, 0x3e	; 62
 c04:	ca 1b       	sub	r28, r26
 c06:	db 0b       	sbc	r29, r27
 c08:	0f b6       	in	r0, 0x3f	; 63
 c0a:	f8 94       	cli
 c0c:	de bf       	out	0x3e, r29	; 62
 c0e:	0f be       	out	0x3f, r0	; 63
 c10:	cd bf       	out	0x3d, r28	; 61
 c12:	09 94       	ijmp

00000c14 <__epilogue_restores__>:
 c14:	2a 88       	ldd	r2, Y+18	; 0x12
 c16:	39 88       	ldd	r3, Y+17	; 0x11
 c18:	48 88       	ldd	r4, Y+16	; 0x10
 c1a:	5f 84       	ldd	r5, Y+15	; 0x0f
 c1c:	6e 84       	ldd	r6, Y+14	; 0x0e
 c1e:	7d 84       	ldd	r7, Y+13	; 0x0d
 c20:	8c 84       	ldd	r8, Y+12	; 0x0c
 c22:	9b 84       	ldd	r9, Y+11	; 0x0b
 c24:	aa 84       	ldd	r10, Y+10	; 0x0a
 c26:	b9 84       	ldd	r11, Y+9	; 0x09
 c28:	c8 84       	ldd	r12, Y+8	; 0x08
 c2a:	df 80       	ldd	r13, Y+7	; 0x07
 c2c:	ee 80       	ldd	r14, Y+6	; 0x06
 c2e:	fd 80       	ldd	r15, Y+5	; 0x05
 c30:	0c 81       	ldd	r16, Y+4	; 0x04
 c32:	1b 81       	ldd	r17, Y+3	; 0x03
 c34:	aa 81       	ldd	r26, Y+2	; 0x02
 c36:	b9 81       	ldd	r27, Y+1	; 0x01
 c38:	ce 0f       	add	r28, r30
 c3a:	d1 1d       	adc	r29, r1
 c3c:	0f b6       	in	r0, 0x3f	; 63
 c3e:	f8 94       	cli
 c40:	de bf       	out	0x3e, r29	; 62
 c42:	0f be       	out	0x3f, r0	; 63
 c44:	cd bf       	out	0x3d, r28	; 61
 c46:	ed 01       	movw	r28, r26
 c48:	08 95       	ret

00000c4a <__udivmodsi4>:
 c4a:	a1 e2       	ldi	r26, 0x21	; 33
 c4c:	1a 2e       	mov	r1, r26
 c4e:	aa 1b       	sub	r26, r26
 c50:	bb 1b       	sub	r27, r27
 c52:	fd 01       	movw	r30, r26
 c54:	0d c0       	rjmp	.+26     	; 0xc70 <__udivmodsi4_ep>

00000c56 <__udivmodsi4_loop>:
 c56:	aa 1f       	adc	r26, r26
 c58:	bb 1f       	adc	r27, r27
 c5a:	ee 1f       	adc	r30, r30
 c5c:	ff 1f       	adc	r31, r31
 c5e:	a2 17       	cp	r26, r18
 c60:	b3 07       	cpc	r27, r19
 c62:	e4 07       	cpc	r30, r20
 c64:	f5 07       	cpc	r31, r21
 c66:	20 f0       	brcs	.+8      	; 0xc70 <__udivmodsi4_ep>
 c68:	a2 1b       	sub	r26, r18
 c6a:	b3 0b       	sbc	r27, r19
 c6c:	e4 0b       	sbc	r30, r20
 c6e:	f5 0b       	sbc	r31, r21

00000c70 <__udivmodsi4_ep>:
 c70:	66 1f       	adc	r22, r22
 c72:	77 1f       	adc	r23, r23
 c74:	88 1f       	adc	r24, r24
 c76:	99 1f       	adc	r25, r25
 c78:	1a 94       	dec	r1
 c7a:	69 f7       	brne	.-38     	; 0xc56 <__udivmodsi4_loop>
 c7c:	60 95       	com	r22
 c7e:	70 95       	com	r23
 c80:	80 95       	com	r24
 c82:	90 95       	com	r25
 c84:	9b 01       	movw	r18, r22
 c86:	ac 01       	movw	r20, r24
 c88:	bd 01       	movw	r22, r26
 c8a:	cf 01       	movw	r24, r30
 c8c:	08 95       	ret

00000c8e <__umulhisi3>:
 c8e:	a2 9f       	mul	r26, r18
 c90:	b0 01       	movw	r22, r0
 c92:	b3 9f       	mul	r27, r19
 c94:	c0 01       	movw	r24, r0
 c96:	a3 9f       	mul	r26, r19
 c98:	70 0d       	add	r23, r0
 c9a:	81 1d       	adc	r24, r1
 c9c:	11 24       	eor	r1, r1
 c9e:	91 1d       	adc	r25, r1
 ca0:	b2 9f       	mul	r27, r18
 ca2:	70 0d       	add	r23, r0
 ca4:	81 1d       	adc	r24, r1
 ca6:	11 24       	eor	r1, r1
 ca8:	91 1d       	adc	r25, r1
 caa:	08 95       	ret

00000cac <_exit>:
 cac:	f8 94       	cli

00000cae <__stop_program>:
 cae:	ff cf       	rjmp	.-2      	; 0xcae <__stop_program>
