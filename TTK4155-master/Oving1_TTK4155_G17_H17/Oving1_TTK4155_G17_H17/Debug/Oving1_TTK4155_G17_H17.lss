
Oving1_TTK4155_G17_H17.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000108  00800100  00000cbe  00000d52  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cbe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800208  00800208  00000e5a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e5a  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00000eb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000476  00000000  00000000  00000f16  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000002c0  00000000  00000000  0000138c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000224  00000000  00000000  0000164c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000104  00000000  00000000  00001870  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000248  00000000  00000000  00001974  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000228  00000000  00000000  00001bbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00001de4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	12 e0       	ldi	r17, 0x02	; 2
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ee eb       	ldi	r30, 0xBE	; 190
  84:	fc e0       	ldi	r31, 0x0C	; 12
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a8 30       	cpi	r26, 0x08	; 8
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	a8 e0       	ldi	r26, 0x08	; 8
  96:	b2 e0       	ldi	r27, 0x02	; 2
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a2 31       	cpi	r26, 0x12	; 18
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <main>
  a6:	0c 94 5d 06 	jmp	0xcba	; 0xcba <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <SRAM_test>:
	}
}

#include <stdlib.h>
void SRAM_test(void)
{
  ae:	cf 92       	push	r12
  b0:	df 92       	push	r13
  b2:	ef 92       	push	r14
  b4:	ff 92       	push	r15
  b6:	0f 93       	push	r16
  b8:	1f 93       	push	r17
  ba:	cf 93       	push	r28
  bc:	df 93       	push	r29
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
	printf("Starting SRAM test...\n");
  be:	8a e0       	ldi	r24, 0x0A	; 10
  c0:	91 e0       	ldi	r25, 0x01	; 1
  c2:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <puts>
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
  c6:	0e 94 65 01 	call	0x2ca	; 0x2ca <rand>
  ca:	6c 01       	movw	r12, r24
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
  cc:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <srand>
	for (uint16_t i = 0; i < ext_ram_size; i++) {
  d0:	c0 e0       	ldi	r28, 0x00	; 0
  d2:	d0 e0       	ldi	r29, 0x00	; 0
#include <stdlib.h>
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
  d4:	00 e0       	ldi	r16, 0x00	; 0
  d6:	10 e0       	ldi	r17, 0x00	; 0
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		ext_ram[i] = some_value;
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,	retreived_value, some_value);
  d8:	0f 2e       	mov	r0, r31
  da:	f0 e2       	ldi	r31, 0x20	; 32
  dc:	ef 2e       	mov	r14, r31
  de:	f1 e0       	ldi	r31, 0x01	; 1
  e0:	ff 2e       	mov	r15, r31
  e2:	f0 2d       	mov	r31, r0
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
  e4:	0e 94 65 01 	call	0x2ca	; 0x2ca <rand>
  e8:	fe 01       	movw	r30, r28
  ea:	f8 5e       	subi	r31, 0xE8	; 232
		ext_ram[i] = some_value;
  ec:	80 83       	st	Z, r24
		uint8_t retreived_value = ext_ram[i];
  ee:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {
  f0:	28 17       	cp	r18, r24
  f2:	a9 f0       	breq	.+42     	; 0x11e <SRAM_test+0x70>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,	retreived_value, some_value);
  f4:	99 27       	eor	r25, r25
  f6:	9f 93       	push	r25
  f8:	8f 93       	push	r24
  fa:	1f 92       	push	r1
  fc:	2f 93       	push	r18
  fe:	df 93       	push	r29
 100:	cf 93       	push	r28
 102:	ff 92       	push	r15
 104:	ef 92       	push	r14
 106:	0e 94 c0 01 	call	0x380	; 0x380 <printf>
			write_errors++;
 10a:	0f 5f       	subi	r16, 0xFF	; 255
 10c:	1f 4f       	sbci	r17, 0xFF	; 255
 10e:	8d b7       	in	r24, 0x3d	; 61
 110:	9e b7       	in	r25, 0x3e	; 62
 112:	08 96       	adiw	r24, 0x08	; 8
 114:	0f b6       	in	r0, 0x3f	; 63
 116:	f8 94       	cli
 118:	9e bf       	out	0x3e, r25	; 62
 11a:	0f be       	out	0x3f, r0	; 63
 11c:	8d bf       	out	0x3d, r24	; 61
	// rand() stores some internal state, so calling this function in a loop will
	// yield different seeds each time (unless srand() is called before this function)
	uint16_t seed = rand();
	// Write phase: Immediately check that the correct value was stored
	srand(seed);
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 11e:	21 96       	adiw	r28, 0x01	; 1
 120:	c1 15       	cp	r28, r1
 122:	98 e0       	ldi	r25, 0x08	; 8
 124:	d9 07       	cpc	r29, r25
 126:	f1 f6       	brne	.-68     	; 0xe4 <SRAM_test+0x36>
			printf("Write phase error: ext_ram[%4d] = %02X (should be %02X)\n", i,	retreived_value, some_value);
			write_errors++;
		}
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
 128:	c6 01       	movw	r24, r12
 12a:	0e 94 6a 01 	call	0x2d4	; 0x2d4 <srand>
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 12e:	c0 e0       	ldi	r28, 0x00	; 0
 130:	d0 e0       	ldi	r29, 0x00	; 0
void SRAM_test(void)
{
	volatile char *ext_ram = (char *) 0x1800; // Start address for the SRAM
	uint16_t ext_ram_size = 0x800;
	uint16_t write_errors = 0;
	uint16_t retrieval_errors = 0;
 132:	e1 2c       	mov	r14, r1
 134:	f1 2c       	mov	r15, r1
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
 136:	0f 2e       	mov	r0, r31
 138:	f9 e5       	ldi	r31, 0x59	; 89
 13a:	cf 2e       	mov	r12, r31
 13c:	f1 e0       	ldi	r31, 0x01	; 1
 13e:	df 2e       	mov	r13, r31
 140:	f0 2d       	mov	r31, r0
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
		uint8_t some_value = rand();
 142:	0e 94 65 01 	call	0x2ca	; 0x2ca <rand>
 146:	fe 01       	movw	r30, r28
 148:	f8 5e       	subi	r31, 0xE8	; 232
		uint8_t retreived_value = ext_ram[i];
 14a:	20 81       	ld	r18, Z
		if (retreived_value != some_value) {printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
 14c:	28 17       	cp	r18, r24
 14e:	b1 f0       	breq	.+44     	; 0x17c <SRAM_test+0xce>
 150:	99 27       	eor	r25, r25
 152:	9f 93       	push	r25
 154:	8f 93       	push	r24
 156:	1f 92       	push	r1
 158:	2f 93       	push	r18
 15a:	df 93       	push	r29
 15c:	cf 93       	push	r28
 15e:	df 92       	push	r13
 160:	cf 92       	push	r12
 162:	0e 94 c0 01 	call	0x380	; 0x380 <printf>
			retrieval_errors++;
 166:	8f ef       	ldi	r24, 0xFF	; 255
 168:	e8 1a       	sub	r14, r24
 16a:	f8 0a       	sbc	r15, r24
 16c:	8d b7       	in	r24, 0x3d	; 61
 16e:	9e b7       	in	r25, 0x3e	; 62
 170:	08 96       	adiw	r24, 0x08	; 8
 172:	0f b6       	in	r0, 0x3f	; 63
 174:	f8 94       	cli
 176:	9e bf       	out	0x3e, r25	; 62
 178:	0f be       	out	0x3f, r0	; 63
 17a:	8d bf       	out	0x3d, r24	; 61
		}
	}
	// Retrieval phase: Check that no values were changed during or after the writephase
	srand(seed);
	// reset the PRNG to the state it had before the write phase
	for (uint16_t i = 0; i < ext_ram_size; i++) {
 17c:	21 96       	adiw	r28, 0x01	; 1
 17e:	c1 15       	cp	r28, r1
 180:	98 e0       	ldi	r25, 0x08	; 8
 182:	d9 07       	cpc	r29, r25
 184:	f1 f6       	brne	.-68     	; 0x142 <SRAM_test+0x94>
		uint8_t retreived_value = ext_ram[i];
		if (retreived_value != some_value) {printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n",i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with\n%4d errors in write phase and\n%4d errors	in retrieval phase\n\n", write_errors, retrieval_errors);
 186:	ff 92       	push	r15
 188:	ef 92       	push	r14
 18a:	1f 93       	push	r17
 18c:	0f 93       	push	r16
 18e:	86 e9       	ldi	r24, 0x96	; 150
 190:	91 e0       	ldi	r25, 0x01	; 1
 192:	9f 93       	push	r25
 194:	8f 93       	push	r24
 196:	0e 94 c0 01 	call	0x380	; 0x380 <printf>
 19a:	0f 90       	pop	r0
 19c:	0f 90       	pop	r0
 19e:	0f 90       	pop	r0
 1a0:	0f 90       	pop	r0
 1a2:	0f 90       	pop	r0
 1a4:	0f 90       	pop	r0
 1a6:	df 91       	pop	r29
 1a8:	cf 91       	pop	r28
 1aa:	1f 91       	pop	r17
 1ac:	0f 91       	pop	r16
 1ae:	ff 90       	pop	r15
 1b0:	ef 90       	pop	r14
 1b2:	df 90       	pop	r13
 1b4:	cf 90       	pop	r12
 1b6:	08 95       	ret

000001b8 <main>:

void SRAM_test(void);

int main(void)
{
	init_UART(UBBR);
 1b8:	8f e1       	ldi	r24, 0x1F	; 31
 1ba:	90 e0       	ldi	r25, 0x00	; 0
 1bc:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <init_UART>
	BIT_ON(MCUCR,SRE);
 1c0:	85 b7       	in	r24, 0x35	; 53
 1c2:	80 68       	ori	r24, 0x80	; 128
 1c4:	85 bf       	out	0x35, r24	; 53
	
	
	DDRA = 0xFF;
 1c6:	8f ef       	ldi	r24, 0xFF	; 255
 1c8:	8a bb       	out	0x1a, r24	; 26
	BIT_OFF_A(0);
 1ca:	d8 98       	cbi	0x1b, 0	; 27
	BIT_ON_A(1);
 1cc:	d9 9a       	sbi	0x1b, 1	; 27
	
	
	
	BIT_ON(DDRE,1);
 1ce:	31 9a       	sbi	0x06, 1	; 6
	BIT_ON(PORTE,1);
 1d0:	39 9a       	sbi	0x07, 1	; 7
	BIT_OFF(PORTE,1);
 1d2:	39 98       	cbi	0x07, 1	; 7
	
	SRAM_test();
 1d4:	0e 94 57 00 	call	0xae	; 0xae <SRAM_test>
	
	testUart();
 1d8:	0e 94 07 01 	call	0x20e	; 0x20e <testUart>
	while (1)
	{
		printf("placeholder\n");
 1dc:	8d ee       	ldi	r24, 0xED	; 237
 1de:	91 e0       	ldi	r25, 0x01	; 1
 1e0:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <puts>
 1e4:	fb cf       	rjmp	.-10     	; 0x1dc <main+0x24>

000001e6 <send_UART>:
 */ 
#include "uart.h"

void send_UART(char letter){
	//send UART melding
	while( !(UCSR0A & (1<<UDRE0)) );
 1e6:	5d 9b       	sbis	0x0b, 5	; 11
 1e8:	fe cf       	rjmp	.-4      	; 0x1e6 <send_UART>
	UDR0 = letter;
 1ea:	8c b9       	out	0x0c, r24	; 12
 1ec:	08 95       	ret

000001ee <recieve_UART>:
	
	fdevopen((int(*)(char, struct __file*))&send_UART, (int(*)(struct __file*))&recieve_UART); //overrides printf("string");
}

unsigned int recieve_UART(void){
	while (!(UCSR0A & (1 << RXC0)));
 1ee:	5f 9b       	sbis	0x0b, 7	; 11
 1f0:	fe cf       	rjmp	.-4      	; 0x1ee <recieve_UART>
	return UDR0;
 1f2:	8c b1       	in	r24, 0x0c	; 12
}
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	08 95       	ret

000001f8 <init_UART>:
	UDR0 = letter;
}

void init_UART(unsigned int ubrr){
	//set baud rate
	UBRR0H = (unsigned char)(ubrr>>8);
 1f8:	90 bd       	out	0x20, r25	; 32
	UBRR0L = (unsigned char)(ubrr);
 1fa:	89 b9       	out	0x09, r24	; 9
	//enable receiver and transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 1fc:	88 e1       	ldi	r24, 0x18	; 24
 1fe:	8a b9       	out	0x0a, r24	; 10
	
	fdevopen((int(*)(char, struct __file*))&send_UART, (int(*)(struct __file*))&recieve_UART); //overrides printf("string");
 200:	67 ef       	ldi	r22, 0xF7	; 247
 202:	70 e0       	ldi	r23, 0x00	; 0
 204:	83 ef       	ldi	r24, 0xF3	; 243
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 75 01 	call	0x2ea	; 0x2ea <fdevopen>
 20c:	08 95       	ret

0000020e <testUart>:
unsigned int recieve_UART(void){
	while (!(UCSR0A & (1 << RXC0)));
	return UDR0;
}

void testUart(void){
 20e:	cf 93       	push	r28
	printf("turn off? Y/N\n");
 210:	89 ef       	ldi	r24, 0xF9	; 249
 212:	91 e0       	ldi	r25, 0x01	; 1
 214:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <puts>
	
	unsigned char temp = ' ';
	while(1){
		temp = recieve_UART();
 218:	0e 94 f7 00 	call	0x1ee	; 0x1ee <recieve_UART>
 21c:	c8 2f       	mov	r28, r24
		if (temp != 0){
 21e:	88 23       	and	r24, r24
 220:	d9 f3       	breq	.-10     	; 0x218 <testUart+0xa>
			send_UART(temp);
 222:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <send_UART>
		}
		if (temp == 'Y'){
 226:	c9 35       	cpi	r28, 0x59	; 89
 228:	b9 f7       	brne	.-18     	; 0x218 <testUart+0xa>
			break;
		}
	};
 22a:	cf 91       	pop	r28
 22c:	08 95       	ret

0000022e <do_rand>:
 22e:	8f 92       	push	r8
 230:	9f 92       	push	r9
 232:	af 92       	push	r10
 234:	bf 92       	push	r11
 236:	cf 92       	push	r12
 238:	df 92       	push	r13
 23a:	ef 92       	push	r14
 23c:	ff 92       	push	r15
 23e:	cf 93       	push	r28
 240:	df 93       	push	r29
 242:	ec 01       	movw	r28, r24
 244:	68 81       	ld	r22, Y
 246:	79 81       	ldd	r23, Y+1	; 0x01
 248:	8a 81       	ldd	r24, Y+2	; 0x02
 24a:	9b 81       	ldd	r25, Y+3	; 0x03
 24c:	61 15       	cp	r22, r1
 24e:	71 05       	cpc	r23, r1
 250:	81 05       	cpc	r24, r1
 252:	91 05       	cpc	r25, r1
 254:	21 f4       	brne	.+8      	; 0x25e <do_rand+0x30>
 256:	64 e2       	ldi	r22, 0x24	; 36
 258:	79 ed       	ldi	r23, 0xD9	; 217
 25a:	8b e5       	ldi	r24, 0x5B	; 91
 25c:	97 e0       	ldi	r25, 0x07	; 7
 25e:	2d e1       	ldi	r18, 0x1D	; 29
 260:	33 ef       	ldi	r19, 0xF3	; 243
 262:	41 e0       	ldi	r20, 0x01	; 1
 264:	50 e0       	ldi	r21, 0x00	; 0
 266:	0e 94 c3 05 	call	0xb86	; 0xb86 <__divmodsi4>
 26a:	49 01       	movw	r8, r18
 26c:	5a 01       	movw	r10, r20
 26e:	9b 01       	movw	r18, r22
 270:	ac 01       	movw	r20, r24
 272:	a7 ea       	ldi	r26, 0xA7	; 167
 274:	b1 e4       	ldi	r27, 0x41	; 65
 276:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <__muluhisi3>
 27a:	6b 01       	movw	r12, r22
 27c:	7c 01       	movw	r14, r24
 27e:	ac ee       	ldi	r26, 0xEC	; 236
 280:	b4 ef       	ldi	r27, 0xF4	; 244
 282:	a5 01       	movw	r20, r10
 284:	94 01       	movw	r18, r8
 286:	0e 94 f0 05 	call	0xbe0	; 0xbe0 <__mulohisi3>
 28a:	c6 0e       	add	r12, r22
 28c:	d7 1e       	adc	r13, r23
 28e:	e8 1e       	adc	r14, r24
 290:	f9 1e       	adc	r15, r25
 292:	f7 fe       	sbrs	r15, 7
 294:	06 c0       	rjmp	.+12     	; 0x2a2 <do_rand+0x74>
 296:	81 e0       	ldi	r24, 0x01	; 1
 298:	c8 1a       	sub	r12, r24
 29a:	d1 08       	sbc	r13, r1
 29c:	e1 08       	sbc	r14, r1
 29e:	80 e8       	ldi	r24, 0x80	; 128
 2a0:	f8 0a       	sbc	r15, r24
 2a2:	c8 82       	st	Y, r12
 2a4:	d9 82       	std	Y+1, r13	; 0x01
 2a6:	ea 82       	std	Y+2, r14	; 0x02
 2a8:	fb 82       	std	Y+3, r15	; 0x03
 2aa:	c6 01       	movw	r24, r12
 2ac:	9f 77       	andi	r25, 0x7F	; 127
 2ae:	df 91       	pop	r29
 2b0:	cf 91       	pop	r28
 2b2:	ff 90       	pop	r15
 2b4:	ef 90       	pop	r14
 2b6:	df 90       	pop	r13
 2b8:	cf 90       	pop	r12
 2ba:	bf 90       	pop	r11
 2bc:	af 90       	pop	r10
 2be:	9f 90       	pop	r9
 2c0:	8f 90       	pop	r8
 2c2:	08 95       	ret

000002c4 <rand_r>:
 2c4:	0e 94 17 01 	call	0x22e	; 0x22e <do_rand>
 2c8:	08 95       	ret

000002ca <rand>:
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	91 e0       	ldi	r25, 0x01	; 1
 2ce:	0e 94 17 01 	call	0x22e	; 0x22e <do_rand>
 2d2:	08 95       	ret

000002d4 <srand>:
 2d4:	a0 e0       	ldi	r26, 0x00	; 0
 2d6:	b0 e0       	ldi	r27, 0x00	; 0
 2d8:	80 93 00 01 	sts	0x0100, r24
 2dc:	90 93 01 01 	sts	0x0101, r25
 2e0:	a0 93 02 01 	sts	0x0102, r26
 2e4:	b0 93 03 01 	sts	0x0103, r27
 2e8:	08 95       	ret

000002ea <fdevopen>:
 2ea:	0f 93       	push	r16
 2ec:	1f 93       	push	r17
 2ee:	cf 93       	push	r28
 2f0:	df 93       	push	r29
 2f2:	ec 01       	movw	r28, r24
 2f4:	8b 01       	movw	r16, r22
 2f6:	00 97       	sbiw	r24, 0x00	; 0
 2f8:	31 f4       	brne	.+12     	; 0x306 <fdevopen+0x1c>
 2fa:	61 15       	cp	r22, r1
 2fc:	71 05       	cpc	r23, r1
 2fe:	19 f4       	brne	.+6      	; 0x306 <fdevopen+0x1c>
 300:	80 e0       	ldi	r24, 0x00	; 0
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	38 c0       	rjmp	.+112    	; 0x376 <fdevopen+0x8c>
 306:	6e e0       	ldi	r22, 0x0E	; 14
 308:	70 e0       	ldi	r23, 0x00	; 0
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <calloc>
 312:	fc 01       	movw	r30, r24
 314:	00 97       	sbiw	r24, 0x00	; 0
 316:	a1 f3       	breq	.-24     	; 0x300 <fdevopen+0x16>
 318:	80 e8       	ldi	r24, 0x80	; 128
 31a:	83 83       	std	Z+3, r24	; 0x03
 31c:	01 15       	cp	r16, r1
 31e:	11 05       	cpc	r17, r1
 320:	71 f0       	breq	.+28     	; 0x33e <fdevopen+0x54>
 322:	13 87       	std	Z+11, r17	; 0x0b
 324:	02 87       	std	Z+10, r16	; 0x0a
 326:	81 e8       	ldi	r24, 0x81	; 129
 328:	83 83       	std	Z+3, r24	; 0x03
 32a:	80 91 08 02 	lds	r24, 0x0208
 32e:	90 91 09 02 	lds	r25, 0x0209
 332:	89 2b       	or	r24, r25
 334:	21 f4       	brne	.+8      	; 0x33e <fdevopen+0x54>
 336:	f0 93 09 02 	sts	0x0209, r31
 33a:	e0 93 08 02 	sts	0x0208, r30
 33e:	20 97       	sbiw	r28, 0x00	; 0
 340:	c9 f0       	breq	.+50     	; 0x374 <fdevopen+0x8a>
 342:	d1 87       	std	Z+9, r29	; 0x09
 344:	c0 87       	std	Z+8, r28	; 0x08
 346:	83 81       	ldd	r24, Z+3	; 0x03
 348:	82 60       	ori	r24, 0x02	; 2
 34a:	83 83       	std	Z+3, r24	; 0x03
 34c:	80 91 0a 02 	lds	r24, 0x020A
 350:	90 91 0b 02 	lds	r25, 0x020B
 354:	89 2b       	or	r24, r25
 356:	71 f4       	brne	.+28     	; 0x374 <fdevopen+0x8a>
 358:	f0 93 0b 02 	sts	0x020B, r31
 35c:	e0 93 0a 02 	sts	0x020A, r30
 360:	80 91 0c 02 	lds	r24, 0x020C
 364:	90 91 0d 02 	lds	r25, 0x020D
 368:	89 2b       	or	r24, r25
 36a:	21 f4       	brne	.+8      	; 0x374 <fdevopen+0x8a>
 36c:	f0 93 0d 02 	sts	0x020D, r31
 370:	e0 93 0c 02 	sts	0x020C, r30
 374:	cf 01       	movw	r24, r30
 376:	df 91       	pop	r29
 378:	cf 91       	pop	r28
 37a:	1f 91       	pop	r17
 37c:	0f 91       	pop	r16
 37e:	08 95       	ret

00000380 <printf>:
 380:	a0 e0       	ldi	r26, 0x00	; 0
 382:	b0 e0       	ldi	r27, 0x00	; 0
 384:	e6 ec       	ldi	r30, 0xC6	; 198
 386:	f1 e0       	ldi	r31, 0x01	; 1
 388:	0c 94 05 06 	jmp	0xc0a	; 0xc0a <__prologue_saves__+0x20>
 38c:	fe 01       	movw	r30, r28
 38e:	35 96       	adiw	r30, 0x05	; 5
 390:	61 91       	ld	r22, Z+
 392:	71 91       	ld	r23, Z+
 394:	af 01       	movw	r20, r30
 396:	80 91 0a 02 	lds	r24, 0x020A
 39a:	90 91 0b 02 	lds	r25, 0x020B
 39e:	0e 94 01 02 	call	0x402	; 0x402 <vfprintf>
 3a2:	e2 e0       	ldi	r30, 0x02	; 2
 3a4:	0c 94 21 06 	jmp	0xc42	; 0xc42 <__epilogue_restores__+0x20>

000003a8 <puts>:
 3a8:	0f 93       	push	r16
 3aa:	1f 93       	push	r17
 3ac:	cf 93       	push	r28
 3ae:	df 93       	push	r29
 3b0:	e0 91 0a 02 	lds	r30, 0x020A
 3b4:	f0 91 0b 02 	lds	r31, 0x020B
 3b8:	23 81       	ldd	r18, Z+3	; 0x03
 3ba:	21 ff       	sbrs	r18, 1
 3bc:	1b c0       	rjmp	.+54     	; 0x3f4 <puts+0x4c>
 3be:	ec 01       	movw	r28, r24
 3c0:	00 e0       	ldi	r16, 0x00	; 0
 3c2:	10 e0       	ldi	r17, 0x00	; 0
 3c4:	89 91       	ld	r24, Y+
 3c6:	60 91 0a 02 	lds	r22, 0x020A
 3ca:	70 91 0b 02 	lds	r23, 0x020B
 3ce:	db 01       	movw	r26, r22
 3d0:	18 96       	adiw	r26, 0x08	; 8
 3d2:	ed 91       	ld	r30, X+
 3d4:	fc 91       	ld	r31, X
 3d6:	19 97       	sbiw	r26, 0x09	; 9
 3d8:	88 23       	and	r24, r24
 3da:	31 f0       	breq	.+12     	; 0x3e8 <puts+0x40>
 3dc:	09 95       	icall
 3de:	89 2b       	or	r24, r25
 3e0:	89 f3       	breq	.-30     	; 0x3c4 <puts+0x1c>
 3e2:	0f ef       	ldi	r16, 0xFF	; 255
 3e4:	1f ef       	ldi	r17, 0xFF	; 255
 3e6:	ee cf       	rjmp	.-36     	; 0x3c4 <puts+0x1c>
 3e8:	8a e0       	ldi	r24, 0x0A	; 10
 3ea:	09 95       	icall
 3ec:	89 2b       	or	r24, r25
 3ee:	11 f4       	brne	.+4      	; 0x3f4 <puts+0x4c>
 3f0:	c8 01       	movw	r24, r16
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <puts+0x50>
 3f4:	8f ef       	ldi	r24, 0xFF	; 255
 3f6:	9f ef       	ldi	r25, 0xFF	; 255
 3f8:	df 91       	pop	r29
 3fa:	cf 91       	pop	r28
 3fc:	1f 91       	pop	r17
 3fe:	0f 91       	pop	r16
 400:	08 95       	ret

00000402 <vfprintf>:
 402:	ac e0       	ldi	r26, 0x0C	; 12
 404:	b0 e0       	ldi	r27, 0x00	; 0
 406:	e7 e0       	ldi	r30, 0x07	; 7
 408:	f2 e0       	ldi	r31, 0x02	; 2
 40a:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__prologue_saves__>
 40e:	7c 01       	movw	r14, r24
 410:	6b 01       	movw	r12, r22
 412:	8a 01       	movw	r16, r20
 414:	fc 01       	movw	r30, r24
 416:	17 82       	std	Z+7, r1	; 0x07
 418:	16 82       	std	Z+6, r1	; 0x06
 41a:	83 81       	ldd	r24, Z+3	; 0x03
 41c:	81 ff       	sbrs	r24, 1
 41e:	bd c1       	rjmp	.+890    	; 0x79a <__stack+0x29b>
 420:	ce 01       	movw	r24, r28
 422:	01 96       	adiw	r24, 0x01	; 1
 424:	4c 01       	movw	r8, r24
 426:	f7 01       	movw	r30, r14
 428:	93 81       	ldd	r25, Z+3	; 0x03
 42a:	f6 01       	movw	r30, r12
 42c:	93 fd       	sbrc	r25, 3
 42e:	85 91       	lpm	r24, Z+
 430:	93 ff       	sbrs	r25, 3
 432:	81 91       	ld	r24, Z+
 434:	6f 01       	movw	r12, r30
 436:	88 23       	and	r24, r24
 438:	09 f4       	brne	.+2      	; 0x43c <vfprintf+0x3a>
 43a:	ab c1       	rjmp	.+854    	; 0x792 <__stack+0x293>
 43c:	85 32       	cpi	r24, 0x25	; 37
 43e:	39 f4       	brne	.+14     	; 0x44e <vfprintf+0x4c>
 440:	93 fd       	sbrc	r25, 3
 442:	85 91       	lpm	r24, Z+
 444:	93 ff       	sbrs	r25, 3
 446:	81 91       	ld	r24, Z+
 448:	6f 01       	movw	r12, r30
 44a:	85 32       	cpi	r24, 0x25	; 37
 44c:	29 f4       	brne	.+10     	; 0x458 <vfprintf+0x56>
 44e:	b7 01       	movw	r22, r14
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 456:	e7 cf       	rjmp	.-50     	; 0x426 <vfprintf+0x24>
 458:	51 2c       	mov	r5, r1
 45a:	31 2c       	mov	r3, r1
 45c:	20 e0       	ldi	r18, 0x00	; 0
 45e:	20 32       	cpi	r18, 0x20	; 32
 460:	a0 f4       	brcc	.+40     	; 0x48a <vfprintf+0x88>
 462:	8b 32       	cpi	r24, 0x2B	; 43
 464:	69 f0       	breq	.+26     	; 0x480 <vfprintf+0x7e>
 466:	30 f4       	brcc	.+12     	; 0x474 <vfprintf+0x72>
 468:	80 32       	cpi	r24, 0x20	; 32
 46a:	59 f0       	breq	.+22     	; 0x482 <vfprintf+0x80>
 46c:	83 32       	cpi	r24, 0x23	; 35
 46e:	69 f4       	brne	.+26     	; 0x48a <vfprintf+0x88>
 470:	20 61       	ori	r18, 0x10	; 16
 472:	2c c0       	rjmp	.+88     	; 0x4cc <vfprintf+0xca>
 474:	8d 32       	cpi	r24, 0x2D	; 45
 476:	39 f0       	breq	.+14     	; 0x486 <vfprintf+0x84>
 478:	80 33       	cpi	r24, 0x30	; 48
 47a:	39 f4       	brne	.+14     	; 0x48a <vfprintf+0x88>
 47c:	21 60       	ori	r18, 0x01	; 1
 47e:	26 c0       	rjmp	.+76     	; 0x4cc <vfprintf+0xca>
 480:	22 60       	ori	r18, 0x02	; 2
 482:	24 60       	ori	r18, 0x04	; 4
 484:	23 c0       	rjmp	.+70     	; 0x4cc <vfprintf+0xca>
 486:	28 60       	ori	r18, 0x08	; 8
 488:	21 c0       	rjmp	.+66     	; 0x4cc <vfprintf+0xca>
 48a:	27 fd       	sbrc	r18, 7
 48c:	27 c0       	rjmp	.+78     	; 0x4dc <vfprintf+0xda>
 48e:	30 ed       	ldi	r19, 0xD0	; 208
 490:	38 0f       	add	r19, r24
 492:	3a 30       	cpi	r19, 0x0A	; 10
 494:	78 f4       	brcc	.+30     	; 0x4b4 <vfprintf+0xb2>
 496:	26 ff       	sbrs	r18, 6
 498:	06 c0       	rjmp	.+12     	; 0x4a6 <vfprintf+0xa4>
 49a:	fa e0       	ldi	r31, 0x0A	; 10
 49c:	5f 9e       	mul	r5, r31
 49e:	30 0d       	add	r19, r0
 4a0:	11 24       	eor	r1, r1
 4a2:	53 2e       	mov	r5, r19
 4a4:	13 c0       	rjmp	.+38     	; 0x4cc <vfprintf+0xca>
 4a6:	8a e0       	ldi	r24, 0x0A	; 10
 4a8:	38 9e       	mul	r3, r24
 4aa:	30 0d       	add	r19, r0
 4ac:	11 24       	eor	r1, r1
 4ae:	33 2e       	mov	r3, r19
 4b0:	20 62       	ori	r18, 0x20	; 32
 4b2:	0c c0       	rjmp	.+24     	; 0x4cc <vfprintf+0xca>
 4b4:	8e 32       	cpi	r24, 0x2E	; 46
 4b6:	21 f4       	brne	.+8      	; 0x4c0 <vfprintf+0xbe>
 4b8:	26 fd       	sbrc	r18, 6
 4ba:	6b c1       	rjmp	.+726    	; 0x792 <__stack+0x293>
 4bc:	20 64       	ori	r18, 0x40	; 64
 4be:	06 c0       	rjmp	.+12     	; 0x4cc <vfprintf+0xca>
 4c0:	8c 36       	cpi	r24, 0x6C	; 108
 4c2:	11 f4       	brne	.+4      	; 0x4c8 <vfprintf+0xc6>
 4c4:	20 68       	ori	r18, 0x80	; 128
 4c6:	02 c0       	rjmp	.+4      	; 0x4cc <vfprintf+0xca>
 4c8:	88 36       	cpi	r24, 0x68	; 104
 4ca:	41 f4       	brne	.+16     	; 0x4dc <vfprintf+0xda>
 4cc:	f6 01       	movw	r30, r12
 4ce:	93 fd       	sbrc	r25, 3
 4d0:	85 91       	lpm	r24, Z+
 4d2:	93 ff       	sbrs	r25, 3
 4d4:	81 91       	ld	r24, Z+
 4d6:	6f 01       	movw	r12, r30
 4d8:	81 11       	cpse	r24, r1
 4da:	c1 cf       	rjmp	.-126    	; 0x45e <vfprintf+0x5c>
 4dc:	98 2f       	mov	r25, r24
 4de:	9f 7d       	andi	r25, 0xDF	; 223
 4e0:	95 54       	subi	r25, 0x45	; 69
 4e2:	93 30       	cpi	r25, 0x03	; 3
 4e4:	28 f4       	brcc	.+10     	; 0x4f0 <vfprintf+0xee>
 4e6:	0c 5f       	subi	r16, 0xFC	; 252
 4e8:	1f 4f       	sbci	r17, 0xFF	; 255
 4ea:	ff e3       	ldi	r31, 0x3F	; 63
 4ec:	f9 83       	std	Y+1, r31	; 0x01
 4ee:	0d c0       	rjmp	.+26     	; 0x50a <__stack+0xb>
 4f0:	83 36       	cpi	r24, 0x63	; 99
 4f2:	31 f0       	breq	.+12     	; 0x500 <__stack+0x1>
 4f4:	83 37       	cpi	r24, 0x73	; 115
 4f6:	71 f0       	breq	.+28     	; 0x514 <__stack+0x15>
 4f8:	83 35       	cpi	r24, 0x53	; 83
 4fa:	09 f0       	breq	.+2      	; 0x4fe <vfprintf+0xfc>
 4fc:	5b c0       	rjmp	.+182    	; 0x5b4 <__stack+0xb5>
 4fe:	22 c0       	rjmp	.+68     	; 0x544 <__stack+0x45>
 500:	f8 01       	movw	r30, r16
 502:	80 81       	ld	r24, Z
 504:	89 83       	std	Y+1, r24	; 0x01
 506:	0e 5f       	subi	r16, 0xFE	; 254
 508:	1f 4f       	sbci	r17, 0xFF	; 255
 50a:	44 24       	eor	r4, r4
 50c:	43 94       	inc	r4
 50e:	51 2c       	mov	r5, r1
 510:	54 01       	movw	r10, r8
 512:	15 c0       	rjmp	.+42     	; 0x53e <__stack+0x3f>
 514:	38 01       	movw	r6, r16
 516:	f2 e0       	ldi	r31, 0x02	; 2
 518:	6f 0e       	add	r6, r31
 51a:	71 1c       	adc	r7, r1
 51c:	f8 01       	movw	r30, r16
 51e:	a0 80       	ld	r10, Z
 520:	b1 80       	ldd	r11, Z+1	; 0x01
 522:	26 ff       	sbrs	r18, 6
 524:	03 c0       	rjmp	.+6      	; 0x52c <__stack+0x2d>
 526:	65 2d       	mov	r22, r5
 528:	70 e0       	ldi	r23, 0x00	; 0
 52a:	02 c0       	rjmp	.+4      	; 0x530 <__stack+0x31>
 52c:	6f ef       	ldi	r22, 0xFF	; 255
 52e:	7f ef       	ldi	r23, 0xFF	; 255
 530:	c5 01       	movw	r24, r10
 532:	2c 87       	std	Y+12, r18	; 0x0c
 534:	0e 94 28 05 	call	0xa50	; 0xa50 <strnlen>
 538:	2c 01       	movw	r4, r24
 53a:	83 01       	movw	r16, r6
 53c:	2c 85       	ldd	r18, Y+12	; 0x0c
 53e:	2f 77       	andi	r18, 0x7F	; 127
 540:	22 2e       	mov	r2, r18
 542:	17 c0       	rjmp	.+46     	; 0x572 <__stack+0x73>
 544:	38 01       	movw	r6, r16
 546:	f2 e0       	ldi	r31, 0x02	; 2
 548:	6f 0e       	add	r6, r31
 54a:	71 1c       	adc	r7, r1
 54c:	f8 01       	movw	r30, r16
 54e:	a0 80       	ld	r10, Z
 550:	b1 80       	ldd	r11, Z+1	; 0x01
 552:	26 ff       	sbrs	r18, 6
 554:	03 c0       	rjmp	.+6      	; 0x55c <__stack+0x5d>
 556:	65 2d       	mov	r22, r5
 558:	70 e0       	ldi	r23, 0x00	; 0
 55a:	02 c0       	rjmp	.+4      	; 0x560 <__stack+0x61>
 55c:	6f ef       	ldi	r22, 0xFF	; 255
 55e:	7f ef       	ldi	r23, 0xFF	; 255
 560:	c5 01       	movw	r24, r10
 562:	2c 87       	std	Y+12, r18	; 0x0c
 564:	0e 94 16 05 	call	0xa2c	; 0xa2c <strnlen_P>
 568:	2c 01       	movw	r4, r24
 56a:	2c 85       	ldd	r18, Y+12	; 0x0c
 56c:	20 68       	ori	r18, 0x80	; 128
 56e:	22 2e       	mov	r2, r18
 570:	83 01       	movw	r16, r6
 572:	23 fc       	sbrc	r2, 3
 574:	1b c0       	rjmp	.+54     	; 0x5ac <__stack+0xad>
 576:	83 2d       	mov	r24, r3
 578:	90 e0       	ldi	r25, 0x00	; 0
 57a:	48 16       	cp	r4, r24
 57c:	59 06       	cpc	r5, r25
 57e:	b0 f4       	brcc	.+44     	; 0x5ac <__stack+0xad>
 580:	b7 01       	movw	r22, r14
 582:	80 e2       	ldi	r24, 0x20	; 32
 584:	90 e0       	ldi	r25, 0x00	; 0
 586:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 58a:	3a 94       	dec	r3
 58c:	f4 cf       	rjmp	.-24     	; 0x576 <__stack+0x77>
 58e:	f5 01       	movw	r30, r10
 590:	27 fc       	sbrc	r2, 7
 592:	85 91       	lpm	r24, Z+
 594:	27 fe       	sbrs	r2, 7
 596:	81 91       	ld	r24, Z+
 598:	5f 01       	movw	r10, r30
 59a:	b7 01       	movw	r22, r14
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 5a2:	31 10       	cpse	r3, r1
 5a4:	3a 94       	dec	r3
 5a6:	f1 e0       	ldi	r31, 0x01	; 1
 5a8:	4f 1a       	sub	r4, r31
 5aa:	51 08       	sbc	r5, r1
 5ac:	41 14       	cp	r4, r1
 5ae:	51 04       	cpc	r5, r1
 5b0:	71 f7       	brne	.-36     	; 0x58e <__stack+0x8f>
 5b2:	e5 c0       	rjmp	.+458    	; 0x77e <__stack+0x27f>
 5b4:	84 36       	cpi	r24, 0x64	; 100
 5b6:	11 f0       	breq	.+4      	; 0x5bc <__stack+0xbd>
 5b8:	89 36       	cpi	r24, 0x69	; 105
 5ba:	39 f5       	brne	.+78     	; 0x60a <__stack+0x10b>
 5bc:	f8 01       	movw	r30, r16
 5be:	27 ff       	sbrs	r18, 7
 5c0:	07 c0       	rjmp	.+14     	; 0x5d0 <__stack+0xd1>
 5c2:	60 81       	ld	r22, Z
 5c4:	71 81       	ldd	r23, Z+1	; 0x01
 5c6:	82 81       	ldd	r24, Z+2	; 0x02
 5c8:	93 81       	ldd	r25, Z+3	; 0x03
 5ca:	0c 5f       	subi	r16, 0xFC	; 252
 5cc:	1f 4f       	sbci	r17, 0xFF	; 255
 5ce:	08 c0       	rjmp	.+16     	; 0x5e0 <__stack+0xe1>
 5d0:	60 81       	ld	r22, Z
 5d2:	71 81       	ldd	r23, Z+1	; 0x01
 5d4:	88 27       	eor	r24, r24
 5d6:	77 fd       	sbrc	r23, 7
 5d8:	80 95       	com	r24
 5da:	98 2f       	mov	r25, r24
 5dc:	0e 5f       	subi	r16, 0xFE	; 254
 5de:	1f 4f       	sbci	r17, 0xFF	; 255
 5e0:	2f 76       	andi	r18, 0x6F	; 111
 5e2:	b2 2e       	mov	r11, r18
 5e4:	97 ff       	sbrs	r25, 7
 5e6:	09 c0       	rjmp	.+18     	; 0x5fa <__stack+0xfb>
 5e8:	90 95       	com	r25
 5ea:	80 95       	com	r24
 5ec:	70 95       	com	r23
 5ee:	61 95       	neg	r22
 5f0:	7f 4f       	sbci	r23, 0xFF	; 255
 5f2:	8f 4f       	sbci	r24, 0xFF	; 255
 5f4:	9f 4f       	sbci	r25, 0xFF	; 255
 5f6:	20 68       	ori	r18, 0x80	; 128
 5f8:	b2 2e       	mov	r11, r18
 5fa:	2a e0       	ldi	r18, 0x0A	; 10
 5fc:	30 e0       	ldi	r19, 0x00	; 0
 5fe:	a4 01       	movw	r20, r8
 600:	0e 94 65 05 	call	0xaca	; 0xaca <__ultoa_invert>
 604:	a8 2e       	mov	r10, r24
 606:	a8 18       	sub	r10, r8
 608:	44 c0       	rjmp	.+136    	; 0x692 <__stack+0x193>
 60a:	85 37       	cpi	r24, 0x75	; 117
 60c:	29 f4       	brne	.+10     	; 0x618 <__stack+0x119>
 60e:	2f 7e       	andi	r18, 0xEF	; 239
 610:	b2 2e       	mov	r11, r18
 612:	2a e0       	ldi	r18, 0x0A	; 10
 614:	30 e0       	ldi	r19, 0x00	; 0
 616:	25 c0       	rjmp	.+74     	; 0x662 <__stack+0x163>
 618:	f2 2f       	mov	r31, r18
 61a:	f9 7f       	andi	r31, 0xF9	; 249
 61c:	bf 2e       	mov	r11, r31
 61e:	8f 36       	cpi	r24, 0x6F	; 111
 620:	c1 f0       	breq	.+48     	; 0x652 <__stack+0x153>
 622:	18 f4       	brcc	.+6      	; 0x62a <__stack+0x12b>
 624:	88 35       	cpi	r24, 0x58	; 88
 626:	79 f0       	breq	.+30     	; 0x646 <__stack+0x147>
 628:	b4 c0       	rjmp	.+360    	; 0x792 <__stack+0x293>
 62a:	80 37       	cpi	r24, 0x70	; 112
 62c:	19 f0       	breq	.+6      	; 0x634 <__stack+0x135>
 62e:	88 37       	cpi	r24, 0x78	; 120
 630:	21 f0       	breq	.+8      	; 0x63a <__stack+0x13b>
 632:	af c0       	rjmp	.+350    	; 0x792 <__stack+0x293>
 634:	2f 2f       	mov	r18, r31
 636:	20 61       	ori	r18, 0x10	; 16
 638:	b2 2e       	mov	r11, r18
 63a:	b4 fe       	sbrs	r11, 4
 63c:	0d c0       	rjmp	.+26     	; 0x658 <__stack+0x159>
 63e:	8b 2d       	mov	r24, r11
 640:	84 60       	ori	r24, 0x04	; 4
 642:	b8 2e       	mov	r11, r24
 644:	09 c0       	rjmp	.+18     	; 0x658 <__stack+0x159>
 646:	24 ff       	sbrs	r18, 4
 648:	0a c0       	rjmp	.+20     	; 0x65e <__stack+0x15f>
 64a:	9f 2f       	mov	r25, r31
 64c:	96 60       	ori	r25, 0x06	; 6
 64e:	b9 2e       	mov	r11, r25
 650:	06 c0       	rjmp	.+12     	; 0x65e <__stack+0x15f>
 652:	28 e0       	ldi	r18, 0x08	; 8
 654:	30 e0       	ldi	r19, 0x00	; 0
 656:	05 c0       	rjmp	.+10     	; 0x662 <__stack+0x163>
 658:	20 e1       	ldi	r18, 0x10	; 16
 65a:	30 e0       	ldi	r19, 0x00	; 0
 65c:	02 c0       	rjmp	.+4      	; 0x662 <__stack+0x163>
 65e:	20 e1       	ldi	r18, 0x10	; 16
 660:	32 e0       	ldi	r19, 0x02	; 2
 662:	f8 01       	movw	r30, r16
 664:	b7 fe       	sbrs	r11, 7
 666:	07 c0       	rjmp	.+14     	; 0x676 <__stack+0x177>
 668:	60 81       	ld	r22, Z
 66a:	71 81       	ldd	r23, Z+1	; 0x01
 66c:	82 81       	ldd	r24, Z+2	; 0x02
 66e:	93 81       	ldd	r25, Z+3	; 0x03
 670:	0c 5f       	subi	r16, 0xFC	; 252
 672:	1f 4f       	sbci	r17, 0xFF	; 255
 674:	06 c0       	rjmp	.+12     	; 0x682 <__stack+0x183>
 676:	60 81       	ld	r22, Z
 678:	71 81       	ldd	r23, Z+1	; 0x01
 67a:	80 e0       	ldi	r24, 0x00	; 0
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	0e 5f       	subi	r16, 0xFE	; 254
 680:	1f 4f       	sbci	r17, 0xFF	; 255
 682:	a4 01       	movw	r20, r8
 684:	0e 94 65 05 	call	0xaca	; 0xaca <__ultoa_invert>
 688:	a8 2e       	mov	r10, r24
 68a:	a8 18       	sub	r10, r8
 68c:	fb 2d       	mov	r31, r11
 68e:	ff 77       	andi	r31, 0x7F	; 127
 690:	bf 2e       	mov	r11, r31
 692:	b6 fe       	sbrs	r11, 6
 694:	0b c0       	rjmp	.+22     	; 0x6ac <__stack+0x1ad>
 696:	2b 2d       	mov	r18, r11
 698:	2e 7f       	andi	r18, 0xFE	; 254
 69a:	a5 14       	cp	r10, r5
 69c:	50 f4       	brcc	.+20     	; 0x6b2 <__stack+0x1b3>
 69e:	b4 fe       	sbrs	r11, 4
 6a0:	0a c0       	rjmp	.+20     	; 0x6b6 <__stack+0x1b7>
 6a2:	b2 fc       	sbrc	r11, 2
 6a4:	08 c0       	rjmp	.+16     	; 0x6b6 <__stack+0x1b7>
 6a6:	2b 2d       	mov	r18, r11
 6a8:	2e 7e       	andi	r18, 0xEE	; 238
 6aa:	05 c0       	rjmp	.+10     	; 0x6b6 <__stack+0x1b7>
 6ac:	7a 2c       	mov	r7, r10
 6ae:	2b 2d       	mov	r18, r11
 6b0:	03 c0       	rjmp	.+6      	; 0x6b8 <__stack+0x1b9>
 6b2:	7a 2c       	mov	r7, r10
 6b4:	01 c0       	rjmp	.+2      	; 0x6b8 <__stack+0x1b9>
 6b6:	75 2c       	mov	r7, r5
 6b8:	24 ff       	sbrs	r18, 4
 6ba:	0d c0       	rjmp	.+26     	; 0x6d6 <__stack+0x1d7>
 6bc:	fe 01       	movw	r30, r28
 6be:	ea 0d       	add	r30, r10
 6c0:	f1 1d       	adc	r31, r1
 6c2:	80 81       	ld	r24, Z
 6c4:	80 33       	cpi	r24, 0x30	; 48
 6c6:	11 f4       	brne	.+4      	; 0x6cc <__stack+0x1cd>
 6c8:	29 7e       	andi	r18, 0xE9	; 233
 6ca:	09 c0       	rjmp	.+18     	; 0x6de <__stack+0x1df>
 6cc:	22 ff       	sbrs	r18, 2
 6ce:	06 c0       	rjmp	.+12     	; 0x6dc <__stack+0x1dd>
 6d0:	73 94       	inc	r7
 6d2:	73 94       	inc	r7
 6d4:	04 c0       	rjmp	.+8      	; 0x6de <__stack+0x1df>
 6d6:	82 2f       	mov	r24, r18
 6d8:	86 78       	andi	r24, 0x86	; 134
 6da:	09 f0       	breq	.+2      	; 0x6de <__stack+0x1df>
 6dc:	73 94       	inc	r7
 6de:	23 fd       	sbrc	r18, 3
 6e0:	13 c0       	rjmp	.+38     	; 0x708 <__stack+0x209>
 6e2:	20 ff       	sbrs	r18, 0
 6e4:	06 c0       	rjmp	.+12     	; 0x6f2 <__stack+0x1f3>
 6e6:	5a 2c       	mov	r5, r10
 6e8:	73 14       	cp	r7, r3
 6ea:	18 f4       	brcc	.+6      	; 0x6f2 <__stack+0x1f3>
 6ec:	53 0c       	add	r5, r3
 6ee:	57 18       	sub	r5, r7
 6f0:	73 2c       	mov	r7, r3
 6f2:	73 14       	cp	r7, r3
 6f4:	68 f4       	brcc	.+26     	; 0x710 <__stack+0x211>
 6f6:	b7 01       	movw	r22, r14
 6f8:	80 e2       	ldi	r24, 0x20	; 32
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	2c 87       	std	Y+12, r18	; 0x0c
 6fe:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 702:	73 94       	inc	r7
 704:	2c 85       	ldd	r18, Y+12	; 0x0c
 706:	f5 cf       	rjmp	.-22     	; 0x6f2 <__stack+0x1f3>
 708:	73 14       	cp	r7, r3
 70a:	10 f4       	brcc	.+4      	; 0x710 <__stack+0x211>
 70c:	37 18       	sub	r3, r7
 70e:	01 c0       	rjmp	.+2      	; 0x712 <__stack+0x213>
 710:	31 2c       	mov	r3, r1
 712:	24 ff       	sbrs	r18, 4
 714:	12 c0       	rjmp	.+36     	; 0x73a <__stack+0x23b>
 716:	b7 01       	movw	r22, r14
 718:	80 e3       	ldi	r24, 0x30	; 48
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	2c 87       	std	Y+12, r18	; 0x0c
 71e:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 722:	2c 85       	ldd	r18, Y+12	; 0x0c
 724:	22 ff       	sbrs	r18, 2
 726:	17 c0       	rjmp	.+46     	; 0x756 <__stack+0x257>
 728:	21 ff       	sbrs	r18, 1
 72a:	03 c0       	rjmp	.+6      	; 0x732 <__stack+0x233>
 72c:	88 e5       	ldi	r24, 0x58	; 88
 72e:	90 e0       	ldi	r25, 0x00	; 0
 730:	02 c0       	rjmp	.+4      	; 0x736 <__stack+0x237>
 732:	88 e7       	ldi	r24, 0x78	; 120
 734:	90 e0       	ldi	r25, 0x00	; 0
 736:	b7 01       	movw	r22, r14
 738:	0c c0       	rjmp	.+24     	; 0x752 <__stack+0x253>
 73a:	82 2f       	mov	r24, r18
 73c:	86 78       	andi	r24, 0x86	; 134
 73e:	59 f0       	breq	.+22     	; 0x756 <__stack+0x257>
 740:	21 fd       	sbrc	r18, 1
 742:	02 c0       	rjmp	.+4      	; 0x748 <__stack+0x249>
 744:	80 e2       	ldi	r24, 0x20	; 32
 746:	01 c0       	rjmp	.+2      	; 0x74a <__stack+0x24b>
 748:	8b e2       	ldi	r24, 0x2B	; 43
 74a:	27 fd       	sbrc	r18, 7
 74c:	8d e2       	ldi	r24, 0x2D	; 45
 74e:	b7 01       	movw	r22, r14
 750:	90 e0       	ldi	r25, 0x00	; 0
 752:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 756:	a5 14       	cp	r10, r5
 758:	38 f4       	brcc	.+14     	; 0x768 <__stack+0x269>
 75a:	b7 01       	movw	r22, r14
 75c:	80 e3       	ldi	r24, 0x30	; 48
 75e:	90 e0       	ldi	r25, 0x00	; 0
 760:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 764:	5a 94       	dec	r5
 766:	f7 cf       	rjmp	.-18     	; 0x756 <__stack+0x257>
 768:	aa 94       	dec	r10
 76a:	f4 01       	movw	r30, r8
 76c:	ea 0d       	add	r30, r10
 76e:	f1 1d       	adc	r31, r1
 770:	80 81       	ld	r24, Z
 772:	b7 01       	movw	r22, r14
 774:	90 e0       	ldi	r25, 0x00	; 0
 776:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 77a:	a1 10       	cpse	r10, r1
 77c:	f5 cf       	rjmp	.-22     	; 0x768 <__stack+0x269>
 77e:	33 20       	and	r3, r3
 780:	09 f4       	brne	.+2      	; 0x784 <__stack+0x285>
 782:	51 ce       	rjmp	.-862    	; 0x426 <vfprintf+0x24>
 784:	b7 01       	movw	r22, r14
 786:	80 e2       	ldi	r24, 0x20	; 32
 788:	90 e0       	ldi	r25, 0x00	; 0
 78a:	0e 94 33 05 	call	0xa66	; 0xa66 <fputc>
 78e:	3a 94       	dec	r3
 790:	f6 cf       	rjmp	.-20     	; 0x77e <__stack+0x27f>
 792:	f7 01       	movw	r30, r14
 794:	86 81       	ldd	r24, Z+6	; 0x06
 796:	97 81       	ldd	r25, Z+7	; 0x07
 798:	02 c0       	rjmp	.+4      	; 0x79e <__stack+0x29f>
 79a:	8f ef       	ldi	r24, 0xFF	; 255
 79c:	9f ef       	ldi	r25, 0xFF	; 255
 79e:	2c 96       	adiw	r28, 0x0c	; 12
 7a0:	e2 e1       	ldi	r30, 0x12	; 18
 7a2:	0c 94 11 06 	jmp	0xc22	; 0xc22 <__epilogue_restores__>

000007a6 <calloc>:
 7a6:	0f 93       	push	r16
 7a8:	1f 93       	push	r17
 7aa:	cf 93       	push	r28
 7ac:	df 93       	push	r29
 7ae:	86 9f       	mul	r24, r22
 7b0:	80 01       	movw	r16, r0
 7b2:	87 9f       	mul	r24, r23
 7b4:	10 0d       	add	r17, r0
 7b6:	96 9f       	mul	r25, r22
 7b8:	10 0d       	add	r17, r0
 7ba:	11 24       	eor	r1, r1
 7bc:	c8 01       	movw	r24, r16
 7be:	0e 94 ef 03 	call	0x7de	; 0x7de <malloc>
 7c2:	ec 01       	movw	r28, r24
 7c4:	00 97       	sbiw	r24, 0x00	; 0
 7c6:	29 f0       	breq	.+10     	; 0x7d2 <calloc+0x2c>
 7c8:	a8 01       	movw	r20, r16
 7ca:	60 e0       	ldi	r22, 0x00	; 0
 7cc:	70 e0       	ldi	r23, 0x00	; 0
 7ce:	0e 94 21 05 	call	0xa42	; 0xa42 <memset>
 7d2:	ce 01       	movw	r24, r28
 7d4:	df 91       	pop	r29
 7d6:	cf 91       	pop	r28
 7d8:	1f 91       	pop	r17
 7da:	0f 91       	pop	r16
 7dc:	08 95       	ret

000007de <malloc>:
 7de:	cf 93       	push	r28
 7e0:	df 93       	push	r29
 7e2:	82 30       	cpi	r24, 0x02	; 2
 7e4:	91 05       	cpc	r25, r1
 7e6:	10 f4       	brcc	.+4      	; 0x7ec <malloc+0xe>
 7e8:	82 e0       	ldi	r24, 0x02	; 2
 7ea:	90 e0       	ldi	r25, 0x00	; 0
 7ec:	e0 91 10 02 	lds	r30, 0x0210
 7f0:	f0 91 11 02 	lds	r31, 0x0211
 7f4:	20 e0       	ldi	r18, 0x00	; 0
 7f6:	30 e0       	ldi	r19, 0x00	; 0
 7f8:	a0 e0       	ldi	r26, 0x00	; 0
 7fa:	b0 e0       	ldi	r27, 0x00	; 0
 7fc:	30 97       	sbiw	r30, 0x00	; 0
 7fe:	39 f1       	breq	.+78     	; 0x84e <malloc+0x70>
 800:	40 81       	ld	r20, Z
 802:	51 81       	ldd	r21, Z+1	; 0x01
 804:	48 17       	cp	r20, r24
 806:	59 07       	cpc	r21, r25
 808:	b8 f0       	brcs	.+46     	; 0x838 <malloc+0x5a>
 80a:	48 17       	cp	r20, r24
 80c:	59 07       	cpc	r21, r25
 80e:	71 f4       	brne	.+28     	; 0x82c <malloc+0x4e>
 810:	82 81       	ldd	r24, Z+2	; 0x02
 812:	93 81       	ldd	r25, Z+3	; 0x03
 814:	10 97       	sbiw	r26, 0x00	; 0
 816:	29 f0       	breq	.+10     	; 0x822 <malloc+0x44>
 818:	13 96       	adiw	r26, 0x03	; 3
 81a:	9c 93       	st	X, r25
 81c:	8e 93       	st	-X, r24
 81e:	12 97       	sbiw	r26, 0x02	; 2
 820:	2c c0       	rjmp	.+88     	; 0x87a <malloc+0x9c>
 822:	90 93 11 02 	sts	0x0211, r25
 826:	80 93 10 02 	sts	0x0210, r24
 82a:	27 c0       	rjmp	.+78     	; 0x87a <malloc+0x9c>
 82c:	21 15       	cp	r18, r1
 82e:	31 05       	cpc	r19, r1
 830:	31 f0       	breq	.+12     	; 0x83e <malloc+0x60>
 832:	42 17       	cp	r20, r18
 834:	53 07       	cpc	r21, r19
 836:	18 f0       	brcs	.+6      	; 0x83e <malloc+0x60>
 838:	a9 01       	movw	r20, r18
 83a:	db 01       	movw	r26, r22
 83c:	01 c0       	rjmp	.+2      	; 0x840 <malloc+0x62>
 83e:	ef 01       	movw	r28, r30
 840:	9a 01       	movw	r18, r20
 842:	bd 01       	movw	r22, r26
 844:	df 01       	movw	r26, r30
 846:	02 80       	ldd	r0, Z+2	; 0x02
 848:	f3 81       	ldd	r31, Z+3	; 0x03
 84a:	e0 2d       	mov	r30, r0
 84c:	d7 cf       	rjmp	.-82     	; 0x7fc <malloc+0x1e>
 84e:	21 15       	cp	r18, r1
 850:	31 05       	cpc	r19, r1
 852:	f9 f0       	breq	.+62     	; 0x892 <malloc+0xb4>
 854:	28 1b       	sub	r18, r24
 856:	39 0b       	sbc	r19, r25
 858:	24 30       	cpi	r18, 0x04	; 4
 85a:	31 05       	cpc	r19, r1
 85c:	80 f4       	brcc	.+32     	; 0x87e <malloc+0xa0>
 85e:	8a 81       	ldd	r24, Y+2	; 0x02
 860:	9b 81       	ldd	r25, Y+3	; 0x03
 862:	61 15       	cp	r22, r1
 864:	71 05       	cpc	r23, r1
 866:	21 f0       	breq	.+8      	; 0x870 <malloc+0x92>
 868:	fb 01       	movw	r30, r22
 86a:	93 83       	std	Z+3, r25	; 0x03
 86c:	82 83       	std	Z+2, r24	; 0x02
 86e:	04 c0       	rjmp	.+8      	; 0x878 <malloc+0x9a>
 870:	90 93 11 02 	sts	0x0211, r25
 874:	80 93 10 02 	sts	0x0210, r24
 878:	fe 01       	movw	r30, r28
 87a:	32 96       	adiw	r30, 0x02	; 2
 87c:	44 c0       	rjmp	.+136    	; 0x906 <malloc+0x128>
 87e:	fe 01       	movw	r30, r28
 880:	e2 0f       	add	r30, r18
 882:	f3 1f       	adc	r31, r19
 884:	81 93       	st	Z+, r24
 886:	91 93       	st	Z+, r25
 888:	22 50       	subi	r18, 0x02	; 2
 88a:	31 09       	sbc	r19, r1
 88c:	39 83       	std	Y+1, r19	; 0x01
 88e:	28 83       	st	Y, r18
 890:	3a c0       	rjmp	.+116    	; 0x906 <malloc+0x128>
 892:	20 91 0e 02 	lds	r18, 0x020E
 896:	30 91 0f 02 	lds	r19, 0x020F
 89a:	23 2b       	or	r18, r19
 89c:	41 f4       	brne	.+16     	; 0x8ae <malloc+0xd0>
 89e:	20 91 06 01 	lds	r18, 0x0106
 8a2:	30 91 07 01 	lds	r19, 0x0107
 8a6:	30 93 0f 02 	sts	0x020F, r19
 8aa:	20 93 0e 02 	sts	0x020E, r18
 8ae:	20 91 04 01 	lds	r18, 0x0104
 8b2:	30 91 05 01 	lds	r19, 0x0105
 8b6:	21 15       	cp	r18, r1
 8b8:	31 05       	cpc	r19, r1
 8ba:	41 f4       	brne	.+16     	; 0x8cc <malloc+0xee>
 8bc:	2d b7       	in	r18, 0x3d	; 61
 8be:	3e b7       	in	r19, 0x3e	; 62
 8c0:	40 91 08 01 	lds	r20, 0x0108
 8c4:	50 91 09 01 	lds	r21, 0x0109
 8c8:	24 1b       	sub	r18, r20
 8ca:	35 0b       	sbc	r19, r21
 8cc:	e0 91 0e 02 	lds	r30, 0x020E
 8d0:	f0 91 0f 02 	lds	r31, 0x020F
 8d4:	e2 17       	cp	r30, r18
 8d6:	f3 07       	cpc	r31, r19
 8d8:	a0 f4       	brcc	.+40     	; 0x902 <malloc+0x124>
 8da:	2e 1b       	sub	r18, r30
 8dc:	3f 0b       	sbc	r19, r31
 8de:	28 17       	cp	r18, r24
 8e0:	39 07       	cpc	r19, r25
 8e2:	78 f0       	brcs	.+30     	; 0x902 <malloc+0x124>
 8e4:	ac 01       	movw	r20, r24
 8e6:	4e 5f       	subi	r20, 0xFE	; 254
 8e8:	5f 4f       	sbci	r21, 0xFF	; 255
 8ea:	24 17       	cp	r18, r20
 8ec:	35 07       	cpc	r19, r21
 8ee:	48 f0       	brcs	.+18     	; 0x902 <malloc+0x124>
 8f0:	4e 0f       	add	r20, r30
 8f2:	5f 1f       	adc	r21, r31
 8f4:	50 93 0f 02 	sts	0x020F, r21
 8f8:	40 93 0e 02 	sts	0x020E, r20
 8fc:	81 93       	st	Z+, r24
 8fe:	91 93       	st	Z+, r25
 900:	02 c0       	rjmp	.+4      	; 0x906 <malloc+0x128>
 902:	e0 e0       	ldi	r30, 0x00	; 0
 904:	f0 e0       	ldi	r31, 0x00	; 0
 906:	cf 01       	movw	r24, r30
 908:	df 91       	pop	r29
 90a:	cf 91       	pop	r28
 90c:	08 95       	ret

0000090e <free>:
 90e:	cf 93       	push	r28
 910:	df 93       	push	r29
 912:	00 97       	sbiw	r24, 0x00	; 0
 914:	09 f4       	brne	.+2      	; 0x918 <free+0xa>
 916:	87 c0       	rjmp	.+270    	; 0xa26 <free+0x118>
 918:	fc 01       	movw	r30, r24
 91a:	32 97       	sbiw	r30, 0x02	; 2
 91c:	13 82       	std	Z+3, r1	; 0x03
 91e:	12 82       	std	Z+2, r1	; 0x02
 920:	c0 91 10 02 	lds	r28, 0x0210
 924:	d0 91 11 02 	lds	r29, 0x0211
 928:	20 97       	sbiw	r28, 0x00	; 0
 92a:	81 f4       	brne	.+32     	; 0x94c <free+0x3e>
 92c:	20 81       	ld	r18, Z
 92e:	31 81       	ldd	r19, Z+1	; 0x01
 930:	28 0f       	add	r18, r24
 932:	39 1f       	adc	r19, r25
 934:	80 91 0e 02 	lds	r24, 0x020E
 938:	90 91 0f 02 	lds	r25, 0x020F
 93c:	82 17       	cp	r24, r18
 93e:	93 07       	cpc	r25, r19
 940:	79 f5       	brne	.+94     	; 0x9a0 <free+0x92>
 942:	f0 93 0f 02 	sts	0x020F, r31
 946:	e0 93 0e 02 	sts	0x020E, r30
 94a:	6d c0       	rjmp	.+218    	; 0xa26 <free+0x118>
 94c:	de 01       	movw	r26, r28
 94e:	20 e0       	ldi	r18, 0x00	; 0
 950:	30 e0       	ldi	r19, 0x00	; 0
 952:	ae 17       	cp	r26, r30
 954:	bf 07       	cpc	r27, r31
 956:	50 f4       	brcc	.+20     	; 0x96c <free+0x5e>
 958:	12 96       	adiw	r26, 0x02	; 2
 95a:	4d 91       	ld	r20, X+
 95c:	5c 91       	ld	r21, X
 95e:	13 97       	sbiw	r26, 0x03	; 3
 960:	9d 01       	movw	r18, r26
 962:	41 15       	cp	r20, r1
 964:	51 05       	cpc	r21, r1
 966:	09 f1       	breq	.+66     	; 0x9aa <free+0x9c>
 968:	da 01       	movw	r26, r20
 96a:	f3 cf       	rjmp	.-26     	; 0x952 <free+0x44>
 96c:	b3 83       	std	Z+3, r27	; 0x03
 96e:	a2 83       	std	Z+2, r26	; 0x02
 970:	40 81       	ld	r20, Z
 972:	51 81       	ldd	r21, Z+1	; 0x01
 974:	84 0f       	add	r24, r20
 976:	95 1f       	adc	r25, r21
 978:	8a 17       	cp	r24, r26
 97a:	9b 07       	cpc	r25, r27
 97c:	71 f4       	brne	.+28     	; 0x99a <free+0x8c>
 97e:	8d 91       	ld	r24, X+
 980:	9c 91       	ld	r25, X
 982:	11 97       	sbiw	r26, 0x01	; 1
 984:	84 0f       	add	r24, r20
 986:	95 1f       	adc	r25, r21
 988:	02 96       	adiw	r24, 0x02	; 2
 98a:	91 83       	std	Z+1, r25	; 0x01
 98c:	80 83       	st	Z, r24
 98e:	12 96       	adiw	r26, 0x02	; 2
 990:	8d 91       	ld	r24, X+
 992:	9c 91       	ld	r25, X
 994:	13 97       	sbiw	r26, 0x03	; 3
 996:	93 83       	std	Z+3, r25	; 0x03
 998:	82 83       	std	Z+2, r24	; 0x02
 99a:	21 15       	cp	r18, r1
 99c:	31 05       	cpc	r19, r1
 99e:	29 f4       	brne	.+10     	; 0x9aa <free+0x9c>
 9a0:	f0 93 11 02 	sts	0x0211, r31
 9a4:	e0 93 10 02 	sts	0x0210, r30
 9a8:	3e c0       	rjmp	.+124    	; 0xa26 <free+0x118>
 9aa:	d9 01       	movw	r26, r18
 9ac:	13 96       	adiw	r26, 0x03	; 3
 9ae:	fc 93       	st	X, r31
 9b0:	ee 93       	st	-X, r30
 9b2:	12 97       	sbiw	r26, 0x02	; 2
 9b4:	4d 91       	ld	r20, X+
 9b6:	5d 91       	ld	r21, X+
 9b8:	a4 0f       	add	r26, r20
 9ba:	b5 1f       	adc	r27, r21
 9bc:	ea 17       	cp	r30, r26
 9be:	fb 07       	cpc	r31, r27
 9c0:	79 f4       	brne	.+30     	; 0x9e0 <free+0xd2>
 9c2:	80 81       	ld	r24, Z
 9c4:	91 81       	ldd	r25, Z+1	; 0x01
 9c6:	84 0f       	add	r24, r20
 9c8:	95 1f       	adc	r25, r21
 9ca:	02 96       	adiw	r24, 0x02	; 2
 9cc:	d9 01       	movw	r26, r18
 9ce:	11 96       	adiw	r26, 0x01	; 1
 9d0:	9c 93       	st	X, r25
 9d2:	8e 93       	st	-X, r24
 9d4:	82 81       	ldd	r24, Z+2	; 0x02
 9d6:	93 81       	ldd	r25, Z+3	; 0x03
 9d8:	13 96       	adiw	r26, 0x03	; 3
 9da:	9c 93       	st	X, r25
 9dc:	8e 93       	st	-X, r24
 9de:	12 97       	sbiw	r26, 0x02	; 2
 9e0:	e0 e0       	ldi	r30, 0x00	; 0
 9e2:	f0 e0       	ldi	r31, 0x00	; 0
 9e4:	8a 81       	ldd	r24, Y+2	; 0x02
 9e6:	9b 81       	ldd	r25, Y+3	; 0x03
 9e8:	00 97       	sbiw	r24, 0x00	; 0
 9ea:	19 f0       	breq	.+6      	; 0x9f2 <free+0xe4>
 9ec:	fe 01       	movw	r30, r28
 9ee:	ec 01       	movw	r28, r24
 9f0:	f9 cf       	rjmp	.-14     	; 0x9e4 <free+0xd6>
 9f2:	ce 01       	movw	r24, r28
 9f4:	02 96       	adiw	r24, 0x02	; 2
 9f6:	28 81       	ld	r18, Y
 9f8:	39 81       	ldd	r19, Y+1	; 0x01
 9fa:	82 0f       	add	r24, r18
 9fc:	93 1f       	adc	r25, r19
 9fe:	20 91 0e 02 	lds	r18, 0x020E
 a02:	30 91 0f 02 	lds	r19, 0x020F
 a06:	28 17       	cp	r18, r24
 a08:	39 07       	cpc	r19, r25
 a0a:	69 f4       	brne	.+26     	; 0xa26 <free+0x118>
 a0c:	30 97       	sbiw	r30, 0x00	; 0
 a0e:	29 f4       	brne	.+10     	; 0xa1a <free+0x10c>
 a10:	10 92 11 02 	sts	0x0211, r1
 a14:	10 92 10 02 	sts	0x0210, r1
 a18:	02 c0       	rjmp	.+4      	; 0xa1e <free+0x110>
 a1a:	13 82       	std	Z+3, r1	; 0x03
 a1c:	12 82       	std	Z+2, r1	; 0x02
 a1e:	d0 93 0f 02 	sts	0x020F, r29
 a22:	c0 93 0e 02 	sts	0x020E, r28
 a26:	df 91       	pop	r29
 a28:	cf 91       	pop	r28
 a2a:	08 95       	ret

00000a2c <strnlen_P>:
 a2c:	fc 01       	movw	r30, r24
 a2e:	05 90       	lpm	r0, Z+
 a30:	61 50       	subi	r22, 0x01	; 1
 a32:	70 40       	sbci	r23, 0x00	; 0
 a34:	01 10       	cpse	r0, r1
 a36:	d8 f7       	brcc	.-10     	; 0xa2e <strnlen_P+0x2>
 a38:	80 95       	com	r24
 a3a:	90 95       	com	r25
 a3c:	8e 0f       	add	r24, r30
 a3e:	9f 1f       	adc	r25, r31
 a40:	08 95       	ret

00000a42 <memset>:
 a42:	dc 01       	movw	r26, r24
 a44:	01 c0       	rjmp	.+2      	; 0xa48 <memset+0x6>
 a46:	6d 93       	st	X+, r22
 a48:	41 50       	subi	r20, 0x01	; 1
 a4a:	50 40       	sbci	r21, 0x00	; 0
 a4c:	e0 f7       	brcc	.-8      	; 0xa46 <memset+0x4>
 a4e:	08 95       	ret

00000a50 <strnlen>:
 a50:	fc 01       	movw	r30, r24
 a52:	61 50       	subi	r22, 0x01	; 1
 a54:	70 40       	sbci	r23, 0x00	; 0
 a56:	01 90       	ld	r0, Z+
 a58:	01 10       	cpse	r0, r1
 a5a:	d8 f7       	brcc	.-10     	; 0xa52 <strnlen+0x2>
 a5c:	80 95       	com	r24
 a5e:	90 95       	com	r25
 a60:	8e 0f       	add	r24, r30
 a62:	9f 1f       	adc	r25, r31
 a64:	08 95       	ret

00000a66 <fputc>:
 a66:	0f 93       	push	r16
 a68:	1f 93       	push	r17
 a6a:	cf 93       	push	r28
 a6c:	df 93       	push	r29
 a6e:	18 2f       	mov	r17, r24
 a70:	09 2f       	mov	r16, r25
 a72:	eb 01       	movw	r28, r22
 a74:	8b 81       	ldd	r24, Y+3	; 0x03
 a76:	81 fd       	sbrc	r24, 1
 a78:	03 c0       	rjmp	.+6      	; 0xa80 <fputc+0x1a>
 a7a:	8f ef       	ldi	r24, 0xFF	; 255
 a7c:	9f ef       	ldi	r25, 0xFF	; 255
 a7e:	20 c0       	rjmp	.+64     	; 0xac0 <fputc+0x5a>
 a80:	82 ff       	sbrs	r24, 2
 a82:	10 c0       	rjmp	.+32     	; 0xaa4 <fputc+0x3e>
 a84:	4e 81       	ldd	r20, Y+6	; 0x06
 a86:	5f 81       	ldd	r21, Y+7	; 0x07
 a88:	2c 81       	ldd	r18, Y+4	; 0x04
 a8a:	3d 81       	ldd	r19, Y+5	; 0x05
 a8c:	42 17       	cp	r20, r18
 a8e:	53 07       	cpc	r21, r19
 a90:	7c f4       	brge	.+30     	; 0xab0 <fputc+0x4a>
 a92:	e8 81       	ld	r30, Y
 a94:	f9 81       	ldd	r31, Y+1	; 0x01
 a96:	9f 01       	movw	r18, r30
 a98:	2f 5f       	subi	r18, 0xFF	; 255
 a9a:	3f 4f       	sbci	r19, 0xFF	; 255
 a9c:	39 83       	std	Y+1, r19	; 0x01
 a9e:	28 83       	st	Y, r18
 aa0:	10 83       	st	Z, r17
 aa2:	06 c0       	rjmp	.+12     	; 0xab0 <fputc+0x4a>
 aa4:	e8 85       	ldd	r30, Y+8	; 0x08
 aa6:	f9 85       	ldd	r31, Y+9	; 0x09
 aa8:	81 2f       	mov	r24, r17
 aaa:	09 95       	icall
 aac:	89 2b       	or	r24, r25
 aae:	29 f7       	brne	.-54     	; 0xa7a <fputc+0x14>
 ab0:	2e 81       	ldd	r18, Y+6	; 0x06
 ab2:	3f 81       	ldd	r19, Y+7	; 0x07
 ab4:	2f 5f       	subi	r18, 0xFF	; 255
 ab6:	3f 4f       	sbci	r19, 0xFF	; 255
 ab8:	3f 83       	std	Y+7, r19	; 0x07
 aba:	2e 83       	std	Y+6, r18	; 0x06
 abc:	81 2f       	mov	r24, r17
 abe:	90 2f       	mov	r25, r16
 ac0:	df 91       	pop	r29
 ac2:	cf 91       	pop	r28
 ac4:	1f 91       	pop	r17
 ac6:	0f 91       	pop	r16
 ac8:	08 95       	ret

00000aca <__ultoa_invert>:
 aca:	fa 01       	movw	r30, r20
 acc:	aa 27       	eor	r26, r26
 ace:	28 30       	cpi	r18, 0x08	; 8
 ad0:	51 f1       	breq	.+84     	; 0xb26 <__ultoa_invert+0x5c>
 ad2:	20 31       	cpi	r18, 0x10	; 16
 ad4:	81 f1       	breq	.+96     	; 0xb36 <__ultoa_invert+0x6c>
 ad6:	e8 94       	clt
 ad8:	6f 93       	push	r22
 ada:	6e 7f       	andi	r22, 0xFE	; 254
 adc:	6e 5f       	subi	r22, 0xFE	; 254
 ade:	7f 4f       	sbci	r23, 0xFF	; 255
 ae0:	8f 4f       	sbci	r24, 0xFF	; 255
 ae2:	9f 4f       	sbci	r25, 0xFF	; 255
 ae4:	af 4f       	sbci	r26, 0xFF	; 255
 ae6:	b1 e0       	ldi	r27, 0x01	; 1
 ae8:	3e d0       	rcall	.+124    	; 0xb66 <__ultoa_invert+0x9c>
 aea:	b4 e0       	ldi	r27, 0x04	; 4
 aec:	3c d0       	rcall	.+120    	; 0xb66 <__ultoa_invert+0x9c>
 aee:	67 0f       	add	r22, r23
 af0:	78 1f       	adc	r23, r24
 af2:	89 1f       	adc	r24, r25
 af4:	9a 1f       	adc	r25, r26
 af6:	a1 1d       	adc	r26, r1
 af8:	68 0f       	add	r22, r24
 afa:	79 1f       	adc	r23, r25
 afc:	8a 1f       	adc	r24, r26
 afe:	91 1d       	adc	r25, r1
 b00:	a1 1d       	adc	r26, r1
 b02:	6a 0f       	add	r22, r26
 b04:	71 1d       	adc	r23, r1
 b06:	81 1d       	adc	r24, r1
 b08:	91 1d       	adc	r25, r1
 b0a:	a1 1d       	adc	r26, r1
 b0c:	20 d0       	rcall	.+64     	; 0xb4e <__ultoa_invert+0x84>
 b0e:	09 f4       	brne	.+2      	; 0xb12 <__ultoa_invert+0x48>
 b10:	68 94       	set
 b12:	3f 91       	pop	r19
 b14:	2a e0       	ldi	r18, 0x0A	; 10
 b16:	26 9f       	mul	r18, r22
 b18:	11 24       	eor	r1, r1
 b1a:	30 19       	sub	r19, r0
 b1c:	30 5d       	subi	r19, 0xD0	; 208
 b1e:	31 93       	st	Z+, r19
 b20:	de f6       	brtc	.-74     	; 0xad8 <__ultoa_invert+0xe>
 b22:	cf 01       	movw	r24, r30
 b24:	08 95       	ret
 b26:	46 2f       	mov	r20, r22
 b28:	47 70       	andi	r20, 0x07	; 7
 b2a:	40 5d       	subi	r20, 0xD0	; 208
 b2c:	41 93       	st	Z+, r20
 b2e:	b3 e0       	ldi	r27, 0x03	; 3
 b30:	0f d0       	rcall	.+30     	; 0xb50 <__ultoa_invert+0x86>
 b32:	c9 f7       	brne	.-14     	; 0xb26 <__ultoa_invert+0x5c>
 b34:	f6 cf       	rjmp	.-20     	; 0xb22 <__ultoa_invert+0x58>
 b36:	46 2f       	mov	r20, r22
 b38:	4f 70       	andi	r20, 0x0F	; 15
 b3a:	40 5d       	subi	r20, 0xD0	; 208
 b3c:	4a 33       	cpi	r20, 0x3A	; 58
 b3e:	18 f0       	brcs	.+6      	; 0xb46 <__ultoa_invert+0x7c>
 b40:	49 5d       	subi	r20, 0xD9	; 217
 b42:	31 fd       	sbrc	r19, 1
 b44:	40 52       	subi	r20, 0x20	; 32
 b46:	41 93       	st	Z+, r20
 b48:	02 d0       	rcall	.+4      	; 0xb4e <__ultoa_invert+0x84>
 b4a:	a9 f7       	brne	.-22     	; 0xb36 <__ultoa_invert+0x6c>
 b4c:	ea cf       	rjmp	.-44     	; 0xb22 <__ultoa_invert+0x58>
 b4e:	b4 e0       	ldi	r27, 0x04	; 4
 b50:	a6 95       	lsr	r26
 b52:	97 95       	ror	r25
 b54:	87 95       	ror	r24
 b56:	77 95       	ror	r23
 b58:	67 95       	ror	r22
 b5a:	ba 95       	dec	r27
 b5c:	c9 f7       	brne	.-14     	; 0xb50 <__ultoa_invert+0x86>
 b5e:	00 97       	sbiw	r24, 0x00	; 0
 b60:	61 05       	cpc	r22, r1
 b62:	71 05       	cpc	r23, r1
 b64:	08 95       	ret
 b66:	9b 01       	movw	r18, r22
 b68:	ac 01       	movw	r20, r24
 b6a:	0a 2e       	mov	r0, r26
 b6c:	06 94       	lsr	r0
 b6e:	57 95       	ror	r21
 b70:	47 95       	ror	r20
 b72:	37 95       	ror	r19
 b74:	27 95       	ror	r18
 b76:	ba 95       	dec	r27
 b78:	c9 f7       	brne	.-14     	; 0xb6c <__ultoa_invert+0xa2>
 b7a:	62 0f       	add	r22, r18
 b7c:	73 1f       	adc	r23, r19
 b7e:	84 1f       	adc	r24, r20
 b80:	95 1f       	adc	r25, r21
 b82:	a0 1d       	adc	r26, r0
 b84:	08 95       	ret

00000b86 <__divmodsi4>:
 b86:	05 2e       	mov	r0, r21
 b88:	97 fb       	bst	r25, 7
 b8a:	1e f4       	brtc	.+6      	; 0xb92 <__divmodsi4+0xc>
 b8c:	00 94       	com	r0
 b8e:	0e 94 da 05 	call	0xbb4	; 0xbb4 <__negsi2>
 b92:	57 fd       	sbrc	r21, 7
 b94:	07 d0       	rcall	.+14     	; 0xba4 <__divmodsi4_neg2>
 b96:	0e 94 2c 06 	call	0xc58	; 0xc58 <__udivmodsi4>
 b9a:	07 fc       	sbrc	r0, 7
 b9c:	03 d0       	rcall	.+6      	; 0xba4 <__divmodsi4_neg2>
 b9e:	4e f4       	brtc	.+18     	; 0xbb2 <__divmodsi4_exit>
 ba0:	0c 94 da 05 	jmp	0xbb4	; 0xbb4 <__negsi2>

00000ba4 <__divmodsi4_neg2>:
 ba4:	50 95       	com	r21
 ba6:	40 95       	com	r20
 ba8:	30 95       	com	r19
 baa:	21 95       	neg	r18
 bac:	3f 4f       	sbci	r19, 0xFF	; 255
 bae:	4f 4f       	sbci	r20, 0xFF	; 255
 bb0:	5f 4f       	sbci	r21, 0xFF	; 255

00000bb2 <__divmodsi4_exit>:
 bb2:	08 95       	ret

00000bb4 <__negsi2>:
 bb4:	90 95       	com	r25
 bb6:	80 95       	com	r24
 bb8:	70 95       	com	r23
 bba:	61 95       	neg	r22
 bbc:	7f 4f       	sbci	r23, 0xFF	; 255
 bbe:	8f 4f       	sbci	r24, 0xFF	; 255
 bc0:	9f 4f       	sbci	r25, 0xFF	; 255
 bc2:	08 95       	ret

00000bc4 <__muluhisi3>:
 bc4:	0e 94 4e 06 	call	0xc9c	; 0xc9c <__umulhisi3>
 bc8:	a5 9f       	mul	r26, r21
 bca:	90 0d       	add	r25, r0
 bcc:	b4 9f       	mul	r27, r20
 bce:	90 0d       	add	r25, r0
 bd0:	a4 9f       	mul	r26, r20
 bd2:	80 0d       	add	r24, r0
 bd4:	91 1d       	adc	r25, r1
 bd6:	11 24       	eor	r1, r1
 bd8:	08 95       	ret

00000bda <__mulshisi3>:
 bda:	b7 ff       	sbrs	r27, 7
 bdc:	0c 94 e2 05 	jmp	0xbc4	; 0xbc4 <__muluhisi3>

00000be0 <__mulohisi3>:
 be0:	0e 94 e2 05 	call	0xbc4	; 0xbc4 <__muluhisi3>
 be4:	82 1b       	sub	r24, r18
 be6:	93 0b       	sbc	r25, r19
 be8:	08 95       	ret

00000bea <__prologue_saves__>:
 bea:	2f 92       	push	r2
 bec:	3f 92       	push	r3
 bee:	4f 92       	push	r4
 bf0:	5f 92       	push	r5
 bf2:	6f 92       	push	r6
 bf4:	7f 92       	push	r7
 bf6:	8f 92       	push	r8
 bf8:	9f 92       	push	r9
 bfa:	af 92       	push	r10
 bfc:	bf 92       	push	r11
 bfe:	cf 92       	push	r12
 c00:	df 92       	push	r13
 c02:	ef 92       	push	r14
 c04:	ff 92       	push	r15
 c06:	0f 93       	push	r16
 c08:	1f 93       	push	r17
 c0a:	cf 93       	push	r28
 c0c:	df 93       	push	r29
 c0e:	cd b7       	in	r28, 0x3d	; 61
 c10:	de b7       	in	r29, 0x3e	; 62
 c12:	ca 1b       	sub	r28, r26
 c14:	db 0b       	sbc	r29, r27
 c16:	0f b6       	in	r0, 0x3f	; 63
 c18:	f8 94       	cli
 c1a:	de bf       	out	0x3e, r29	; 62
 c1c:	0f be       	out	0x3f, r0	; 63
 c1e:	cd bf       	out	0x3d, r28	; 61
 c20:	09 94       	ijmp

00000c22 <__epilogue_restores__>:
 c22:	2a 88       	ldd	r2, Y+18	; 0x12
 c24:	39 88       	ldd	r3, Y+17	; 0x11
 c26:	48 88       	ldd	r4, Y+16	; 0x10
 c28:	5f 84       	ldd	r5, Y+15	; 0x0f
 c2a:	6e 84       	ldd	r6, Y+14	; 0x0e
 c2c:	7d 84       	ldd	r7, Y+13	; 0x0d
 c2e:	8c 84       	ldd	r8, Y+12	; 0x0c
 c30:	9b 84       	ldd	r9, Y+11	; 0x0b
 c32:	aa 84       	ldd	r10, Y+10	; 0x0a
 c34:	b9 84       	ldd	r11, Y+9	; 0x09
 c36:	c8 84       	ldd	r12, Y+8	; 0x08
 c38:	df 80       	ldd	r13, Y+7	; 0x07
 c3a:	ee 80       	ldd	r14, Y+6	; 0x06
 c3c:	fd 80       	ldd	r15, Y+5	; 0x05
 c3e:	0c 81       	ldd	r16, Y+4	; 0x04
 c40:	1b 81       	ldd	r17, Y+3	; 0x03
 c42:	aa 81       	ldd	r26, Y+2	; 0x02
 c44:	b9 81       	ldd	r27, Y+1	; 0x01
 c46:	ce 0f       	add	r28, r30
 c48:	d1 1d       	adc	r29, r1
 c4a:	0f b6       	in	r0, 0x3f	; 63
 c4c:	f8 94       	cli
 c4e:	de bf       	out	0x3e, r29	; 62
 c50:	0f be       	out	0x3f, r0	; 63
 c52:	cd bf       	out	0x3d, r28	; 61
 c54:	ed 01       	movw	r28, r26
 c56:	08 95       	ret

00000c58 <__udivmodsi4>:
 c58:	a1 e2       	ldi	r26, 0x21	; 33
 c5a:	1a 2e       	mov	r1, r26
 c5c:	aa 1b       	sub	r26, r26
 c5e:	bb 1b       	sub	r27, r27
 c60:	fd 01       	movw	r30, r26
 c62:	0d c0       	rjmp	.+26     	; 0xc7e <__udivmodsi4_ep>

00000c64 <__udivmodsi4_loop>:
 c64:	aa 1f       	adc	r26, r26
 c66:	bb 1f       	adc	r27, r27
 c68:	ee 1f       	adc	r30, r30
 c6a:	ff 1f       	adc	r31, r31
 c6c:	a2 17       	cp	r26, r18
 c6e:	b3 07       	cpc	r27, r19
 c70:	e4 07       	cpc	r30, r20
 c72:	f5 07       	cpc	r31, r21
 c74:	20 f0       	brcs	.+8      	; 0xc7e <__udivmodsi4_ep>
 c76:	a2 1b       	sub	r26, r18
 c78:	b3 0b       	sbc	r27, r19
 c7a:	e4 0b       	sbc	r30, r20
 c7c:	f5 0b       	sbc	r31, r21

00000c7e <__udivmodsi4_ep>:
 c7e:	66 1f       	adc	r22, r22
 c80:	77 1f       	adc	r23, r23
 c82:	88 1f       	adc	r24, r24
 c84:	99 1f       	adc	r25, r25
 c86:	1a 94       	dec	r1
 c88:	69 f7       	brne	.-38     	; 0xc64 <__udivmodsi4_loop>
 c8a:	60 95       	com	r22
 c8c:	70 95       	com	r23
 c8e:	80 95       	com	r24
 c90:	90 95       	com	r25
 c92:	9b 01       	movw	r18, r22
 c94:	ac 01       	movw	r20, r24
 c96:	bd 01       	movw	r22, r26
 c98:	cf 01       	movw	r24, r30
 c9a:	08 95       	ret

00000c9c <__umulhisi3>:
 c9c:	a2 9f       	mul	r26, r18
 c9e:	b0 01       	movw	r22, r0
 ca0:	b3 9f       	mul	r27, r19
 ca2:	c0 01       	movw	r24, r0
 ca4:	a3 9f       	mul	r26, r19
 ca6:	70 0d       	add	r23, r0
 ca8:	81 1d       	adc	r24, r1
 caa:	11 24       	eor	r1, r1
 cac:	91 1d       	adc	r25, r1
 cae:	b2 9f       	mul	r27, r18
 cb0:	70 0d       	add	r23, r0
 cb2:	81 1d       	adc	r24, r1
 cb4:	11 24       	eor	r1, r1
 cb6:	91 1d       	adc	r25, r1
 cb8:	08 95       	ret

00000cba <_exit>:
 cba:	f8 94       	cli

00000cbc <__stop_program>:
 cbc:	ff cf       	rjmp	.-2      	; 0xcbc <__stop_program>
